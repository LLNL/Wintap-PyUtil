Search.setIndex({"docnames": ["bincfg", "bincfg.cfg", "bincfg.labeling", "bincfg.normalization", "bincfg.utils", "index", "modules"], "filenames": ["bincfg.rst", "bincfg.cfg.rst", "bincfg.labeling.rst", "bincfg.normalization.rst", "bincfg.utils.rst", "index.rst", "modules.rst"], "titles": ["bincfg package", "bincfg.cfg package", "bincfg.labeling package", "bincfg.normalization package", "bincfg.utils package", "Welcome to BinCFG\u2019s documentation!", "bincfg"], "terms": {"add_funct": [0, 1], "asm_count": [0, 1], "block": [0, 1, 2, 3, 5], "blocks_dict": [0, 1], "edg": [0, 1, 2, 5], "from_cfg_dict": [0, 1], "from_networkx": [0, 1], "function": [0, 1, 2, 3, 4, 5], "functions_dict": [0, 1], "get_block": [0, 1], "get_block_containing_address": [0, 1], "get_cfg_build_cod": [0, 1], "get_compressed_stat": [0, 1, 3], "get_funct": [0, 1], "get_function_by_nam": [0, 1], "insert_librari": [0, 1], "load": [0, 1, 2, 3, 4, 5], "metadata": [0, 1], "normal": [0, 1, 2, 4, 5, 6], "num_asm_lin": [0, 1], "num_block": [0, 1], "num_edg": [0, 1], "num_funct": [0, 1], "save": [0, 1, 2, 3, 4], "to_adjacency_matrix": [0, 1, 5], "to_cfg_dict": [0, 1], "to_networkx": [0, 1], "uncompress_stat": [0, 1], "invalidinsertionmemoryaddresserror": [0, 1], "cfgbasicblock": [0, 1, 2, 3, 5], "address": [0, 1, 3, 4], "all_edg": [0, 1], "asm_lin": [0, 1, 3, 4], "asm_memory_address": [0, 1], "call": [0, 1, 2, 3, 4, 5], "edges_in": [0, 1], "edges_out": [0, 1], "get_sorted_edg": [0, 1], "has_edg": [0, 1], "has_edge_from": [0, 1], "has_edge_to": [0, 1], "instruction_address": [0, 1, 3], "is_function_cal": [0, 1], "is_function_entri": [0, 1], "is_function_jump": [0, 1], "is_function_return": [0, 1], "is_multi_function_cal": [0, 1], "is_padding_nod": [0, 1], "label": [0, 1, 5, 6], "normal_children": [0, 1], "normal_par": [0, 1], "num_edges_in": [0, 1], "num_edges_out": [0, 1], "parent_funct": [0, 1], "remove_edg": [0, 1], "cfgdataset": [0, 1, 3, 4], "add_data": [0, 1], "num_cfg": [0, 1], "cfgedg": [0, 1], "edge_typ": [0, 1], "from_block": [0, 1], "is_branch": [0, 1], "is_function_call_edg": [0, 1], "is_normal_edg": [0, 1], "to_block": [0, 1], "edgetyp": [0, 1], "function_cal": [0, 1], "get_edge_typ": [0, 1], "cfgfunction": [0, 1, 5], "called_bi": [0, 1], "function_entry_block": [0, 1], "is_extern_funct": [0, 1], "is_intern_funct": [0, 1], "is_recurs": [0, 1], "is_root_funct": [0, 1], "name": [0, 1, 3, 4, 5], "nice_nam": [0, 1], "num_fc_edg": [0, 1], "parent_cfg": [0, 1], "symbol_nam": [0, 1], "cfgparseerror": [0, 1], "get_asm_from_node_label": [0, 1], "parse_cfg_data": [0, 1], "parse_ghidra_parquet": [0, 1], "parse_rose_gv": [0, 1], "parse_rose_txt": [0, 1], "memcfg": [0, 1, 3, 4, 5], "blockinfobitmask": [0, 1], "block_asm_idx": [0, 1], "block_flag": [0, 1], "block_func_idx": [0, 1], "block_label": [0, 1], "function_name_to_idx": [0, 1], "get_block_asm_lin": [0, 1], "get_block_edges_out": [0, 1], "get_block_flag": [0, 1], "get_block_function_idx": [0, 1], "get_block_function_nam": [0, 1], "get_block_info": [0, 1], "get_block_label": [0, 1], "get_coo_indic": [0, 1], "get_edge_valu": [0, 1], "graph_c": [0, 1], "graph_r": [0, 1], "is_block_extern_funct": [0, 1], "is_block_function_cal": [0, 1], "is_block_function_entri": [0, 1], "is_block_function_jump": [0, 1], "is_block_function_return": [0, 1], "is_block_label": [0, 1], "is_block_multi_function_cal": [0, 1], "token": [0, 1, 4, 5, 6], "memcfgdataset": [0, 1, 3, 4], "remove_cfg": [0, 1], "train_test_split": [0, 1], "using_token": [0, 1, 3], "util": [0, 2, 3, 5, 6], "cfg_util": [0, 3, 5, 6], "check_for_norm": [0, 4], "get_address": [0, 4], "get_special_function_nam": [0, 3, 4], "update_atomic_token": [0, 4], "update_memcfg_token": [0, 4], "misc_util": [0, 5, 6], "equalitycheckingerror": [0, 4], "equalityerror": [0, 4], "arg_array_split": [0, 4], "eq_obj": [0, 4], "eq_obj_err": [0, 4], "get_modul": [0, 4], "get_smallest_np_dtyp": [0, 4], "hash_obj": [0, 4], "isinstance_with_iter": [0, 4], "log": [0, 4], "progressbar": [0, 1, 3, 4], "scatter_nd_numpi": [0, 4], "set_logg": [0, 4], "timeout_wrapp": [0, 4], "mp_util": [0, 5, 6], "aquirelockerror": [0, 4], "atomicdata": [0, 1, 4], "aquire_lock": [0, 4], "atomic_read": [0, 4], "atomic_upd": [0, 4], "atomic_writ": [0, 4], "delete_fil": [0, 4], "release_lock": [0, 4], "atomictokendict": [0, 1, 4], "addtoken": [0, 4], "data": [0, 1, 3, 4, 5], "get": [0, 1, 2, 3, 4, 5], "item": [0, 4], "kei": [0, 4], "setdefault": [0, 4], "updat": [0, 1, 3, 4], "valu": [0, 1, 2, 3, 4], "multiprocessingerror": [0, 4], "redirectstdstream": [0, 4], "threadpoolmanag": [0, 4], "num_work": [0, 4], "pool": [0, 4], "get_thread_pool": [0, 4], "init_thread_pool": [0, 4], "map_mp": [0, 4], "terminate_thread_pool": [0, 4], "custom": [0, 4, 5, 6], "extra": [0, 1, 2, 4, 5, 6], "info": [0, 1, 4, 5, 6], "base_norm": [0, 5, 6], "basenorm": [0, 1, 3, 5], "default_tokenization_level": [0, 3], "handle_function_cal": [0, 3], "handle_ignor": [0, 3], "handle_immedi": [0, 3], "handle_instruct": [0, 3], "handle_jump": [0, 3], "handle_memory_express": [0, 3], "handle_memory_s": [0, 3], "handle_mismatch": [0, 3], "handle_newlin": [0, 3], "handle_opcod": [0, 3], "handle_prefix": [0, 3], "handle_regist": [0, 3], "handle_rose_info": [0, 3], "handle_unknown_token": [0, 3], "hash_token": [0, 3], "register_opcode_handl": [0, 3], "token_sep": [0, 3], "tokenization_level": [0, 3], "metanorm": [0, 3], "base_token": [0, 5, 6], "basetoken": [0, 3], "default_newline_tupl": [0, 3], "on_token_mismatch": [0, 3], "builtin_norm": [0, 5, 6], "compressedstatsnorm": [0, 3], "deepbindiffnorm": [0, 3], "deepsemanticnorm": [0, 3], "innereyenorm": [0, 3, 5], "mynorm": [0, 3], "safenorm": [0, 3], "get_norm": [0, 3], "norm_util": [0, 5, 6], "clean_incoming_instruct": [0, 3], "clean_nop": [0, 3], "eq_special_func": [0, 3], "ignor": [0, 1, 2, 3, 4], "imm_to_int": [0, 3], "memsize_valu": [0, 3], "replace_function_call_immedi": [0, 3], "replace_general_regist": [0, 3], "replace_jmpdst": [0, 3], "replace_memory_express": [0, 3], "return_immstr": [0, 3], "special_function_cal": [0, 3], "threshold_immedi": [0, 3], "normalize_cfg_data": [0, 3, 5], "tokenization_const": [0, 5, 6], "arch": [0, 3], "x86": [0, 3], "x86_64": [0, 3], "default_token": [0, 3], "tokenmismatcherror": [0, 3], "tokenizationlevel": [0, 3], "auto": [0, 3], "instruct": [0, 1, 2, 3], "opcod": [0, 3], "branch_predict": [0, 3], "close_bracket": [0, 3], "immedi": [0, 3, 4, 5], "instruction_prefix": [0, 3], "instruction_start": [0, 3], "memory_s": [0, 3], "mismatch": [0, 2, 3], "newlin": [0, 1, 3], "open_bracket": [0, 3], "plus_sign": [0, 3], "ptr": [0, 3], "regist": [0, 1, 3], "rose_info": [0, 3], "segment": [0, 3], "segment_address": [0, 3], "space": [0, 1, 3, 5], "times_sign": [0, 3], "node_label": [0, 1, 5, 6], "default_header_path": [0, 2], "generate_c_header_fil": [0, 2], "get_node_label": [0, 2], "parse_cfg_label": [0, 5, 6], "parse_node_label": [0, 2], "class": [0, 1, 3, 4], "method": [0, 1, 2, 3, 4, 5], "involv": [0, 1, 3, 4], "object": [0, 1, 3, 4, 5], "pars": [0, 1, 2, 3, 5], "input": [0, 1, 3, 4], "see": [1, 3, 4, 5], "homepag": 1, "quick": [1, 5], "exampl": [1, 3, 4, 5], "how": [1, 3, 4], "us": [1, 2, 3, 4, 5], "none": [1, 3, 4], "sourc": [1, 2, 3, 4], "base": [1, 3, 4, 5], "A": [1, 2, 3, 4, 5], "control": [1, 5], "flow": [1, 5], "graph": [1, 2, 5], "represent": [1, 5], "binari": [1, 3, 5], "can": [1, 2, 3, 4, 5], "current": [1, 2, 3, 4], "from": [1, 2, 3, 4, 5], "rose": [1, 2, 3, 5], "analysi": [1, 3, 5], "tool": [1, 3, 5], "both": [1, 2, 4], "text": 1, "graphviz": 1, "dotfil": 1, "output": [1, 2, 3, 4, 5], "note": [1, 2, 3, 4, 5], "indetermin": 1, "etc": [1, 3, 4], "ar": [1, 2, 3, 4, 5], "complet": [1, 2, 4], "paramet": [1, 2, 3, 4], "option": [1, 2, 3, 4], "union": [1, 3, 4], "str": [1, 2, 3, 4], "textio": 1, "sequenc": [1, 4], "pd": 1, "datafram": 1, "make": [1, 3, 4, 5], "thi": [1, 2, 3, 4, 5], "type": [1, 2, 3, 4], "infer": 1, "pass": [1, 2, 3, 4], "string": [1, 2, 3, 4], "either": [1, 3, 4], "charact": [1, 3, 4], "split": [1, 3, 4], "all": [1, 2, 3, 4, 5], "treat": [1, 3], "filenam": 1, "open": 1, "ghidra": [1, 3], "parquet": 1, "file": [1, 2, 3, 4, 5], "thei": [1, 3, 4], "end": [1, 2, 3, 4], "pq": 1, "otherwis": [1, 2, 3, 4], "alreadi": [1, 2, 3, 4], "read": [1, 4, 5], "readlin": 1, "panda": 1, "anyth": [1, 3], "els": [1, 3], "an": [1, 2, 3, 4, 5], "error": [1, 2, 3, 4], "rais": [1, 2, 3, 4], "forc": [1, 3], "renorm": [1, 3], "incom": [1, 3, 4], "dict": [1, 4], "dictionari": [1, 3, 4], "add": [1, 3, 4, 5], "shallow": 1, "copi": [1, 3, 4], "overrid": [1, 3, 4], "fals": [1, 3, 4], "given": [1, 2, 3, 4], "": [1, 2, 3, 4], "should": [1, 2, 3, 4], "onli": [1, 2, 3, 4, 5], "done": [1, 2, 3, 4, 5], "onc": [1, 2, 3, 4], "have": [1, 2, 3, 4, 5], "been": [1, 3, 4], "fulli": 1, "initi": [1, 2, 3, 4], "do": [1, 2, 3, 4, 5], "some": [1, 3, 4, 5], "housekeep": 1, "thing": 1, "set": [1, 2, 3, 4], "attribut": [1, 2, 3, 4, 5], "respect": [1, 4], "ad": [1, 2, 3, 4, 5], "miss": 1, "associ": [1, 2], "convert": [1, 3, 5], "tupl": [1, 3, 4], "new": [1, 3, 4, 5], "arbitrari": [1, 3, 4], "number": [1, 3, 4], "bool": [1, 3, 4], "basic": [1, 2, 3, 5], "contain": [1, 2, 3, 4], "exist": [1, 3, 4], "If": [1, 2, 3, 4, 5], "true": [1, 3, 4], "those": [1, 2, 3, 4], "overriden": 1, "which": [1, 2, 3, 4], "ha": [1, 2, 3, 4], "unsupport": 1, "behavior": [1, 3, 5], "default": [1, 2, 3, 4, 5], "properti": [1, 4], "collect": 1, "counter": 1, "uniqu": [1, 4], "assembli": [1, 2, 3, 5], "line": [1, 3, 5], "count": [1, 3], "list": [1, 2, 3, 4], "order": [1, 2, 3, 4], "memori": [1, 3, 5], "map": [1, 3, 4], "integ": [1, 2, 3, 4], "outgo": 1, "classmethod": 1, "cfg_dict": 1, "expect": [1, 3, 4], "exact": [1, 2], "same": [1, 2, 3, 4], "structur": 1, "you": [1, 2, 3, 4, 5], "case": [1, 2, 3, 4], "networkx": 1, "i": [1, 2, 3, 4, 5], "shown": [1, 3], "raise_err": [1, 4], "return": [1, 2, 3, 4], "int": [1, 2, 3, 4], "eg": [1, 2, 3, 4], "wa": [1, 2, 3, 4], "found": [1, 3, 4], "valueerror": [1, 2, 3, 4], "could": [1, 3, 4], "start": [1, 2, 3, 4], "one": [1, 2, 3, 4, 5], "its": [1, 2, 3, 4, 5], "lazili": 1, "comput": 1, "lookup": 1, "them": [1, 2, 3, 5], "python": [1, 3, 4, 5], "code": [1, 2, 3, 4, 5], "build": [1, 3], "test": [1, 4, 5], "stat": [1, 5], "about": [1, 2, 3, 5], "compress": 1, "version": [1, 3, 5], "These": [1, 3], "meant": [1, 3, 4], "veri": [1, 3, 4], "simpl": [1, 3], "comparison": 1, "dataset": [1, 3, 4], "subsampl": 1, "highli": 1, "convolut": 1, "gener": [1, 2, 3, 4], "statist": 1, "100": 1, "million": 1, "hpc": 1, "thu": [1, 3, 4], "requir": [1, 3, 5], "outweigh": 1, "singl": [1, 3, 4], "time": [1, 4], "Will": [1, 2, 3, 4], "numpi": [1, 4], "arrai": [1, 4], "1": [1, 3, 4, 5], "d": [1, 2, 3, 4, 5], "dtype": [1, 4], "np": [1, 4], "uint8": 1, "indic": [1, 3, 4], "0": [1, 3, 4, 5], "12": 1, "level": [1, 2, 3], "node": [1, 2], "each": [1, 2, 3, 4], "4": [1, 3], "byte": [1, 3], "unsign": 1, "abov": [1, 3, 4], "The": [1, 2, 3, 4], "alwai": [1, 2, 3, 4], "store": [1, 4], "littl": 1, "endian": 1, "20": 1, "degre": 1, "histogram": 1, "2": [1, 3, 4, 5], "3": [1, 3, 4, 5], "below": [1, 3], "reason": 1, "out": [1, 2, 3, 4], "vast": 1, "major": 1, "so": [1, 2, 3, 5], "fine": 1, "wai": [1, 2, 3, 5], "my": 1, "purpos": [1, 3, 4, 5], "handl": [1, 3, 4], "46": 1, "size": [1, 3, 4], "per": [1, 2, 4], "bin": [1, 3], "left": [1, 3], "inclus": 1, "right": 1, "exclus": [1, 4], "26": 1, "5": [1, 5], "6": 1, "7": [1, 3], "8": [1, 3, 5], "9": [1, 3], "10": [1, 3, 4], "14": [1, 5], "16": [1, 3], "18": 1, "25": 1, "30": 1, "35": 1, "40": 1, "50": 1, "60": 1, "80": 1, "150": 1, "200": 1, "differ": [1, 2, 3, 4], "compil": [1, 2, 3], "optim": [1, 2, 4], "inlin": [1, 2], "loop": 1, "unrol": 1, "avx": [1, 3], "like": [1, 3, 4, 5], "drastic": 1, "chang": [1, 3, 4, 5], "were": [1, 3, 4], "chosen": 1, "arbitrarili": 1, "tickl": 1, "non": 1, "neurotyp": 1, "nice": [1, 4], "love": 1, "brain": 1, "72": 1, "undirect": 1, "most": [1, 3], "rel": [1, 5], "small": [1, 3], "across": [1, 5], "while": [1, 3], "much": [1, 3], "more": [1, 2, 3, 4, 5], "93": 1, "21": 1, "15": [1, 3], "300": 1, "400": 1, "500": 1, "especi": 1, "spread": 1, "ie": [1, 2, 3, 4], "focus": 1, "larger": 1, "rang": 1, "sinc": [1, 3, 4], "notic": [1, 3], "distribut": 1, "than": [1, 2, 3, 4], "sai": [1, 3], "One": [1, 3], "sure": [1, 3, 4, 5], "good": 1, "doesn": [1, 3, 4], "t": [1, 2, 3, 4], "creat": [1, 2, 3, 4], "too": [1, 3, 4], "mani": [1, 4], "obviou": 1, "varri": 1, "length": [1, 3, 4], "unless": [1, 2, 4], "state": 1, "percentag": 1, "would": [1, 3, 4], "mean": [1, 3], "between": [1, 3, 4], "255": 1, "until": [1, 2, 4], "245": 1, "NOT": [1, 3, 4], "other": [1, 2, 3, 4], "don": [1, 2, 3], "program": [1, 3], "specif": [1, 3], "even": [1, 2, 3, 4], "proport": 1, "v": [1, 3], "ani": [1, 2, 3, 4, 5], "pretti": 1, "rare": 1, "henc": 1, "why": [1, 3, 4], "we": [1, 2, 3, 4], "keep": [1, 3], "measur": 1, "gather": [1, 4], "func_degree_hist": 1, "mess": [1, 2, 4], "premis": 1, "inform": [1, 3, 4], "partial": 1, "hidden": 1, "present": [1, 3], "seem": 1, "import": [1, 2, 3, 4, 5], "central": 1, "beliv": 1, "proven": 1, "enough": 1, "displai": 1, "worth": 1, "becaus": [1, 3], "linear": 1, "natur": 1, "sequenti": [1, 4], "believ": [1, 3], "larg": [1, 3, 4], "similar": 1, "depend": [1, 3], "featur": 1, "think": [1, 2, 4], "mostli": 1, "wash": 1, "look": [1, 3, 5], "ones": [1, 3], "highlight": 1, "branch": [1, 3], "cover": 1, "amount": [1, 3], "where": [1, 2, 3, 4], "within": [1, 2, 3, 4], "tend": 1, "occur": [1, 2, 3, 4], "howev": [1, 3, 4], "combin": [1, 3], "dilut": 1, "further": 1, "It": [1, 2, 3, 4], "mai": [1, 2, 3, 4, 5], "includ": [1, 3, 4], "am": 1, "fenc": 1, "work": [1, 3], "just": [1, 2, 3], "possibli": 1, "also": [1, 2, 3, 4], "atom": [1, 4], "shape": 1, "97": 1, "len": [1, 4], "ndarrai": [1, 4], "doe": [1, 3, 4], "__unnamed_func_": 1, "func": [1, 3, 4], "function_map": 1, "offset": 1, "insert": [1, 2, 3], "share": 1, "librari": [1, 3, 5], "modifi": [1, 3, 4], "appropri": 1, "final": [1, 3, 4, 5], "extern": [1, 3], "implement": [1, 2, 3], "assum": [1, 3, 4], "later": [1, 3, 4], "being": [1, 2, 3, 4], "might": 1, "properli": [1, 4], "correct": [1, 2], "function_mapp": 1, "known": [1, 2, 3, 4], "export": 1, "sometim": [1, 3], "determin": [1, 3, 4], "strip": [1, 3], "linker": 1, "emit": 1, "alias": 1, "wish": [1, 2, 3, 5], "manual": 1, "empti": [1, 3, 4], "first": [1, 2, 3, 4], "avail": [1, 2], "locat": [1, 2], "fit": [1, 2, 3], "path": [1, 2, 5], "inplac": [1, 3, 4], "force_renorm": [1, 3], "place": [1, 2, 3, 4], "built": [1, 3, 4], "whether": [1, 3, 4], "self": [1, 3, 4], "previous": [1, 3, 4], "asm": [1, 5], "spars": 1, "adjac": [1, 4, 5], "matrix": [1, 5], "connect": 1, "slow": 1, "probabl": 1, "speed": 1, "up": [1, 2, 3, 4], "point": 1, "direct": [1, 2, 3], "No": 1, "detail": [1, 3], "int32": 1, "torch": 1, "pytorch": 1, "tensor": 1, "longtensor": 1, "coo": 1, "want": [1, 4], "csr": 1, "format": 1, "now": [1, 2, 5], "less": 1, "document": [1, 3], "supported": 1, "func_address_1": 1, "is_extern_func": 1, "intend": [1, 5], "runtim": 1, "here": [1, 3], "jump": [1, 3], "when": [1, 2, 3, 4], "block_address_1": 1, "unlabel": [1, 2, 5], "other_basic_block_address": 1, "clean": [1, 3], "separ": [1, 3], "func_address_2": 1, "func_address_x": 1, "block_address_x": 1, "digraph": 1, "instal": [1, 4], "multidigraph": 1, "had": [1, 5], "element": [1, 3, 4], "second": [1, 4], "third": 1, "equival": [1, 4], "block_id": 1, "part": [1, 3], "least": [1, 2], "uppercas": 1, "hex": [1, 2, 3, 4], "0x": [1, 3], "theoret": 1, "possibl": [1, 2, 3, 4], "anoth": [1, 2, 4], "back": [1, 3, 4], "libc": [1, 3], "setup": 1, "Then": [1, 5], "Their": 1, "id": [1, 3], "follow": [1, 3], "uint32": [1, 4], "uncompress": 1, "specifi": [1, 3, 4], "apprear": 1, "decreas": 1, "around": 1, "index": [1, 2, 3, 4, 5], "multipl": [1, 2, 3, 4, 5], "row": [1, 3], "what": [1, 3, 4], "except": [1, 2, 3, 4], "pickl": [1, 3, 4], "deepcopi": 1, "ed": 1, "themselv": [1, 2, 4], "belong": 1, "iter": [1, 3, 4], "inst_str": 1, "duplic": 1, "yet": [1, 4], "check": [1, 2, 3, 4], "as_set": 1, "sort": 1, "appear": [1, 3, 4], "enum": [1, 3], "For": [1, 2, 3, 4, 5], "normal_edges_in": 1, "normal_edges_out": 1, "function_call_edges_in": 1, "function_call_edges_out": 1, "unord": [1, 4], "instead": [1, 3, 4, 5], "tini": 1, "bit": [1, 3], "long": [1, 3], "run": [1, 4], "hinder": 1, "determinist": 1, "addresslik": 1, "consid": [1, 3, 4], "entri": 1, "match": [1, 3, 4], "parent": [1, 2, 3], "who": 1, "iff": [1, 3], "re": [1, 3], "fullmatch": 1, "re_return_instruct": 1, "multi": 1, "two": [1, 3, 4], "pad": 1, "nop": [1, 2, 3, 5], "align": 1, "children": [1, 2], "remov": [1, 2, 3], "cfg_data": [1, 3, 4], "load_path": 1, "max_fil": 1, "allow_multiple_norm": 1, "progress": [1, 3, 4], "add_data_kwarg": 1, "attempt": [1, 3, 4], "directori": [1, 5], "txt": 1, "dot": [1, 4], "cannot": [1, 3, 4], "stop": [1, 2], "after": [1, 2, 3, 4], "max": [1, 4], "allow": [1, 3, 4, 5], "unnorm": [1, 3, 5], "show": [1, 3, 4], "attach": 1, "kwarg": [1, 3, 4], "whose": [1, 3], "typeerror": [1, 3, 4], "someth": [1, 3, 4], "accross": 1, "without": [1, 2, 3, 4, 5], "total": [1, 4], "immut": 1, "exactli": [1, 3, 4], "tabl": 1, "fc": 1, "_": [1, 3, 4], "go": [1, 3], "plain": [1, 3], "result": [1, 3, 4], "continu": [1, 2], "next": 1, "instanc": [1, 3], "unknown": [1, 2, 3, 4], "bad": [1, 3, 4], "dynam": [1, 3], "mutabl": 1, "need": [1, 3, 4, 5], "intern": [1, 3], "itself": [1, 3], "equal": [1, 3, 4], "symbol": [1, 3], "isnt": 1, "unpars": 1, "memory_address": 1, "asm_instruct": 1, "dure": [1, 3, 4], "correctli": [1, 3], "prebuilt": 1, "individu": [1, 3], "effici": [1, 3, 5], "bare": 1, "minimum": 1, "un": 1, "again": [1, 5], "mask": 1, "boolean": 1, "lambda": [1, 3], "resolv": 1, "is_in_extern_funct": 1, "32": [1, 3], "_block_flags_int": 1, "contigu": 1, "smallest": [1, 4], "largest": [1, 4], "To": [1, 5], "block_idx": [1, 3], "must": [1, 3, 4], "slice": 1, "correspond": [1, 3], "flag": [1, 3, 5], "th": 1, "as_dict": 1, "section": [1, 4], "function_idx": 1, "labels_list": 1, "ret_edge_typ": 1, "is_block_function_start": 1, "__unnamed_func__": 1, "alia": 1, "ecrypt": 1, "file_io": [1, 2], "network_io": [1, 2], "error_handl": [1, 2], "string_pars": [1, 2], "know": [1, 2, 3], "oppos": 1, "column": 1, "origin": [1, 3], "coo_indic": 1, "finicki": 1, "sparse_coo_tensor": 1, "indici": [1, 4], "transpos": 1, "get_edges_out": 1, "inher": [1, 3], "block_info": 1, "inbetween": [1, 3], "whatev": [1, 4], "user": [1, 3, 5], "due": 1, "oper": [1, 4], "explicit": 1, "operand": [1, 3], "cumul": 1, "sum": 1, "start_idx": [1, 4], "end_idx": [1, 4], "lowercas": [1, 3], "befor": [1, 3, 4], "mp": 1, "multiprocess": [1, 4], "cfg_or_idx": 1, "test_siz": 1, "test_uid": 1, "train": 1, "randomli": 1, "alloc": [1, 3], "uid": 1, "float": [1, 3], "percent": 1, "notimplementederror": [1, 3], "_description_": 1, "train_dataset": 1, "test_dataset": 1, "subpackag": [2, 3, 4, 6], "provid": [2, 3, 5], "c": [2, 3, 4], "still": [2, 3, 4], "develop": 2, "node_label_head": 2, "h": [2, 3], "header": 2, "encrypt": 2, "our": 2, "insentit": 2, "help": 2, "cfg": [2, 3, 4, 5, 6], "produc": 2, "__node_label_encryption_start__": 2, "definit": [2, 3], "begin": [2, 3], "move": [2, 3], "scope": [2, 3], "enter": 2, "exit": [2, 4], "subroutin": 2, "reach": [2, 3], "regardless": 2, "actual": 2, "propag": 2, "child": [2, 3], "zero": 2, "recommend": [2, 5], "highest": 2, "mitig": 2, "chanc": 2, "isn": 2, "necessari": [2, 3], "shouldn": 2, "__clear_node_labels__": 2, "purposefulli": 2, "give": [2, 3, 4, 5], "matter": [2, 3], "person": 2, "philosophi": 2, "inherit": [2, 3], "analyz": 2, "accordingli": 2, "take": [2, 3, 4], "form": [2, 5], "word": [2, 3], "label_v": 2, "scheme": 2, "warn": 2, "rather": 2, "ineffici": [2, 4, 5], "pseudocod": 2, "everi": 2, "labeling_par": 2, "recurs": [2, 3, 4], "through": [2, 3, 5], "descend": 2, "_labeling_par": 2, "And": [2, 3], "wont": 2, "hopefulli": 2, "well": [3, 4, 5], "abil": 3, "easili": [3, 4], "support": 3, "architectur": 3, "disassembl": 3, "http": [3, 4], "github": 3, "com": [3, 4], "nationalsecurityag": 3, "By": [3, 4], "perform": 3, "extran": 3, "variou": [3, 4], "made": [3, 5], "0x00402cdd": 3, "rsp": [3, 5], "0x08": [3, 5], "0x00402cf0": 3, "push": [3, 5], "qword": [3, 5], "rip": [3, 5], "0x0000000000252312": 3, "absolut": [3, 5], "0x0000000000655008": 3, "0x0000000000403360": 3, "print": [3, 5], "2433810": 3, "4207456": 3, "decim": 3, "whitespac": 3, "comma": 3, "identifi": 3, "process": [3, 4], "main": [3, 4], "unlik": 3, "ever": 3, "instanti": 3, "stream": [3, 4], "token_nam": 3, "token_str": 3, "regex": 3, "doc": 3, "org": 3, "html": 3, "write": [3, 4], "token_regex": 3, "virtual": 3, "defin": 3, "op": 3, "own": 3, "join": 3, "togeth": 3, "few": [3, 4], "literatur": 3, "innerey": [3, 5], "arxiv": 3, "pdf": 3, "1808": 3, "04706": 3, "deep": 3, "diff": 3, "www": 3, "ndss": 3, "symposium": 3, "wp": 3, "upload": 3, "2020": 3, "02": 3, "24311": 3, "paper": 3, "safe": 3, "gadiluna": 3, "semant": 3, "ab": 3, "2106": 3, "05478": 3, "quit": 3, "In": 3, "fact": 3, "techniqu": 3, "include_neg": 3, "function_call_str": 3, "alter": [3, 5], "There": 3, "handler": 3, "slightli": 3, "full": 3, "specifc": 3, "regular": 3, "express": 3, "handle_cal": 3, "everyth": 3, "often": [3, 5], "useless": 3, "alongsid": 3, "filler": 3, "brand": 3, "whenev": [3, 4], "entir": [3, 4], "signatur": 3, "As": 3, "desir": 3, "__init__": 3, "under": 3, "common": [3, 5], "yourself": [3, 4], "dill": 3, "serial": 3, "happen": [3, 4], "futur": 3, "figur": 3, "abl": [3, 4], "capabl": [3, 4], "simpli": [3, 5], "pickleabl": 3, "arg": [3, 4], "inst": 3, "construct": 3, "pick": 3, "anonymize_token": 3, "annonym": 3, "shake_128": 3, "hash": [3, 4], "bureaucraci": 3, "idx": 3, "raw": 3, "last": 3, "tokentupl": 3, "sentenc": 3, "noth": [3, 4], "instuct": 3, "manipul": [3, 5], "destin": 3, "edit": [3, 5], "memory_start": 3, "special": [3, 4], "normalizaion": 3, "find": [3, 4], "prefix": 3, "tell": 3, "u": 3, "neg": [3, 4], "overridden": 3, "subclass": 3, "enforce_asm_rul": 3, "newline_tup": 3, "n": [3, 4], "match_instruction_address": 3, "languag": 3, "rule": 3, "check_assembly_rul": 3, "aren": 3, "faster": 3, "execut": [3, 4], "_set_default_enforce_asm_rul": 3, "effect": [3, 4], "interpret": 3, "colon": 3, "predict": 3, "op_regex": 3, "func_or_str_nam": 3, "_handle_instruct": 3, "along": [3, 4], "argument": 3, "callabl": [3, 4], "automat": [3, 4], "inner": 3, "global": [3, 4], "j": 3, "pattern": 3, "yield": 3, "dct": 3, "metaclass": 3, "problem": [3, 4], "_handle_immedi": 3, "sent": 3, "outsid": 3, "__post_init__": 3, "myself": 3, "solut": 3, "That": 3, "track": 3, "intiti": 3, "someon": 3, "wrap": [3, 4], "previou": 3, "getattr": 3, "func_nam": 3, "m": 3, "question": [3, 4], "variabl": 3, "init": 3, "inst_addr": 3, "9a": 3, "f": 3, "inst_start": 3, "start_instr": 3, "lock": [3, 4], "rep": 3, "ne": 3, "nz": 3, "e": [3, 5], "z": 3, "segment_addr": 3, "0o": 3, "0b": 3, "01": 3, "cdefg": 3, "xyz": 3, "mm": 3, "st": 3, "sb": 3, "p": 3, "l": 3, "ip": 3, "b": [3, 4], "sd": 3, "abcd": 3, "x": 3, "cd": 3, "r": 3, "dwb": 3, "lh": 3, "cst": 3, "w": 3, "fp_": 3, "opc": 3, "gil": 3, "tr": 3, "msw": 3, "mxcsr": 3, "dqt": 3, "doubl": 3, "mmword": 3, "z0": 3, "9_": 3, "schema": 3, "disassembli": 3, "bb": 3, "essenti": [3, 4], "pipe": 3, "bracket": [3, 4], "tab": 3, "delimit": 3, "onto": 3, "liter": 3, "access": 3, "dword": 3, "repn": 3, "attatch": 3, "substr": 3, "pt": 3, "pn": 3, "come": [3, 4], "far": [3, 4], "0x123456": 3, "octal": 3, "alphabet": [3, 4], "transform": 3, "pair": 3, "prefer": [3, 5], "search": [3, 4, 5], "mo": 3, "reciev": 3, "pull": [3, 5], "top": 3, "placement": 3, "__class__": 3, "bunch": 3, "builtin": [3, 5], "decompil": 3, "lose": 3, "lower": 3, "threshold": 3, "jmpdst": 3, "deepsem": 3, "deepbindiff": 3, "pointer": 3, "deepsemant": 3, "imm_threshold": 3, "alon": 3, "replac": 3, "immval": 3, "special_funct": 3, "plt": [3, 5], "kept": 3, "externfunc": [3, 5], "constant": 3, "renam": 3, "st5": 3, "rax": [3, 5], "reg8": 3, "r14d": 3, "reg4": 3, "zmm13": 3, "zmm": 3, "memexpr": 3, "realli": 3, "suppos": 3, "fall": 3, "categori": 3, "innerfunc": [3, 5], "famili": 3, "refer": 3, "static": 3, "dispbss": 3, "dispdata": 3, "stack": [3, 4], "cr": 3, "dr": 3, "g": 3, "reg": 3, "y": 3, "31": 3, "si": 3, "di": 3, "memptr": 3, "tbyte": 3, "xword": 3, "64": 3, "indirect": 3, "scale": 3, "displac": 3, "dispstr": 3, "disp": 3, "member": 3, "greater": 3, "safe_threshold": 3, "5000": 3, "decis": 3, "oov": 3, "try": 3, "accept": [3, 4], "assort": 3, "helper": [3, 4], "__str__": 3, "unus": 3, "s1": 3, "s2": 3, "account": 3, "hexadecim": 3, "memsiz": 3, "higher": 3, "But": 3, "forget": 3, "lazi": 3, "_repl_func": 3, "ideal": 3, "callsa": 3, "immediate_value_str": 3, "keyword": 3, "sign": [3, 4], "front": [3, 4], "internfunc": 3, "multifunc": 3, "default_immediate_threshold": 3, "posit": [3, 4], "convert_to_mem": 3, "unpack_cfg": 3, "mention": 3, "tokendicttyp": 3, "unpack": [3, 4], "enumer": 3, "conflict": 4, "obj": 4, "file_token": 4, "curr_data": 4, "update_token": 4, "modif": 4, "miscellan": 4, "unexpect": 4, "messag": 4, "return_index": 4, "array_split": 4, "perfectli": 4, "divid": 4, "4th": 4, "endic": 4, "returned_arrai": 4, "selector": 4, "strict_typ": 4, "__eq__": 4, "relat": 4, "reflex": 4, "impli": 4, "symmetri": 4, "transit": 4, "fast": 4, "appli": 4, "feasibli": 4, "convers": 4, "subcal": 4, "consum": 4, "letter": 4, "sensit": 4, "underscor": 4, "append": 4, "debug": 4, "unequ": 4, "multiset": 4, "subel": 4, "trace": 4, "obj1": 4, "obj2": 4, "err_messag": 4, "importerror": 4, "moduletyp": 4, "val": 4, "magnitud": 4, "furthest": 4, "return_int": 4, "ret_list": 4, "depth": 4, "isinst": 4, "fail": 4, "sever": 4, "logger": 4, "notebook": 4, "stackoverflow": 4, "15411967": 4, "ipython": 4, "target": 4, "shamelessli": 4, "stolen": 4, "46065873": 4, "scatter": 4, "ndim": 4, "timeout": 4, "timeout_ret_v": 4, "termin": 4, "thread": 4, "lock_path": 4, "init_data": 4, "filepath": 4, "max_read_attempt": 4, "atomic_dict": 4, "pkl": 4, "lockpath": 4, "maximum": 4, "indefinit": 4, "aquir": 4, "prevent": 4, "quickli": 4, "hang": 4, "danger": 4, "update_func": 4, "update_arg": 4, "update_kwarg": 4, "file_data": 4, "update_data": 4, "releas": 4, "delet": 4, "atomic_data_kwarg": 4, "act": 4, "dictinoari": 4, "err": 4, "tb": 4, "stdout": 4, "stderr": 4, "context": 4, "manag": 4, "temporarili": 4, "redirect": 4, "close": 4, "worker": 4, "tpm": 4, "ret_n": 4, "min": 4, "o": 4, "cpu_count": 4, "max_default_num_work": 4, "chunk": 4, "starmap": 4, "chunksiz": 4, "on_error": 4, "over": 4, "mutual": 4, "send": 4, "star": 4, "_mponerrortyp": 4, "describ": 4, "error_object": 4, "traceback": 4, "error_info": 4, "return_non": 4, "send_sigint": 4, "sigint": 4, "wait": 4, "sigterm": 4, "47553120": 4, "kill": 4, "sigkil": 4, "clone": 5, "repo": 5, "git": 5, "url": 5, "your": 5, "environ": 5, "pip": 5, "packag": [5, 6], "mode": 5, "link": 5, "reflect": 5, "script": 5, "bug": 5, "fix": 5, "reinstal": 5, "worri": 5, "56": 5, "65": 5, "219": 5, "_init": 5, "0x00001000": 5, "0x00001040": 5, "printf": 5, "0x00001050": 5, "norm_cfg": 5, "0x00001004": 5, "sub": 5, "0x00001008": 5, "mov": 5, "0x0000000000002fd9": 5, "12249": 5, "0x0000000000003fe8": 5, "0x0000100f": 5, "0x00001012": 5, "je": 5, "0x0000000000001016": 5, "4118": 5, "0x00001014": 5, "0x00001016": 5, "0x0000101a": 5, "ret": 5, "sub_rsp_immv": 5, "mov_rax_": 5, "_rip_": 5, "_immval_": 5, "test_rax_rax": 5, "je_immv": 5, "call_func": 5, "add_rsp_immv": 5, "high": 5, "suitabl": 5, "machin": 5, "learn": 5, "easier": 5, "travers": 5, "walk": 5, "ml": 5, "readi": 5, "mem_cfg": [5, 6], "submodul": [5, 6], "modul": [5, 6], "cfg_basic_block": [5, 6], "cfg_dataset": [5, 6], "cfg_edg": [5, 6], "cfg_function": [5, 6], "cfg_parser": [5, 6], "mem_cfg_dataset": [5, 6], "page": 5, "content": 6}, "objects": {"": [[0, 0, 0, "-", "bincfg"]], "bincfg": [[0, 0, 0, "-", "cfg"], [0, 0, 0, "-", "cfg_basic_block"], [0, 0, 0, "-", "cfg_dataset"], [0, 0, 0, "-", "cfg_edge"], [0, 0, 0, "-", "cfg_function"], [0, 0, 0, "-", "cfg_parsers"], [2, 0, 0, "-", "labeling"], [0, 0, 0, "-", "mem_cfg"], [0, 0, 0, "-", "mem_cfg_dataset"]], "bincfg.cfg": [[1, 0, 0, "-", "cfg"], [1, 0, 0, "-", "cfg_basic_block"], [1, 0, 0, "-", "cfg_dataset"], [1, 0, 0, "-", "cfg_edge"], [1, 0, 0, "-", "cfg_function"], [1, 0, 0, "-", "cfg_parsers"], [1, 0, 0, "-", "mem_cfg"], [1, 0, 0, "-", "mem_cfg_dataset"]], "bincfg.cfg.cfg": [[1, 1, 1, "", "CFG"], [1, 5, 1, "", "InvalidInsertionMemoryAddressError"]], "bincfg.cfg.cfg.CFG": [[1, 2, 1, "", "add_function"], [1, 3, 1, "", "asm_counts"], [1, 3, 1, "", "blocks"], [1, 4, 1, "", "blocks_dict"], [1, 3, 1, "", "edges"], [1, 2, 1, "", "from_cfg_dict"], [1, 2, 1, "", "from_networkx"], [1, 3, 1, "", "functions"], [1, 4, 1, "", "functions_dict"], [1, 2, 1, "", "get_block"], [1, 2, 1, "", "get_block_containing_address"], [1, 2, 1, "", "get_cfg_build_code"], [1, 2, 1, "", "get_compressed_stats"], [1, 2, 1, "", "get_function"], [1, 2, 1, "", "get_function_by_name"], [1, 2, 1, "", "insert_library"], [1, 2, 1, "", "load"], [1, 4, 1, "", "metadata"], [1, 2, 1, "", "normalize"], [1, 4, 1, "", "normalizer"], [1, 3, 1, "", "num_asm_lines"], [1, 3, 1, "", "num_blocks"], [1, 3, 1, "", "num_edges"], [1, 3, 1, "", "num_functions"], [1, 2, 1, "", "save"], [1, 2, 1, "", "to_adjacency_matrix"], [1, 2, 1, "", "to_cfg_dict"], [1, 2, 1, "", "to_networkx"], [1, 2, 1, "", "uncompress_stats"]], "bincfg.cfg.cfg_basic_block": [[1, 1, 1, "", "CFGBasicBlock"]], "bincfg.cfg.cfg_basic_block.CFGBasicBlock": [[1, 4, 1, "", "address"], [1, 3, 1, "", "all_edges"], [1, 3, 1, "", "asm_counts"], [1, 4, 1, "", "asm_lines"], [1, 3, 1, "", "asm_memory_addresses"], [1, 2, 1, "", "calls"], [1, 4, 1, "", "edges_in"], [1, 4, 1, "", "edges_out"], [1, 2, 1, "", "get_sorted_edges"], [1, 2, 1, "", "has_edge"], [1, 2, 1, "", "has_edge_from"], [1, 2, 1, "", "has_edge_to"], [1, 3, 1, "", "instruction_addresses"], [1, 3, 1, "", "is_function_call"], [1, 3, 1, "", "is_function_entry"], [1, 3, 1, "", "is_function_jump"], [1, 3, 1, "", "is_function_return"], [1, 3, 1, "", "is_multi_function_call"], [1, 3, 1, "", "is_padding_node"], [1, 4, 1, "", "labels"], [1, 3, 1, "", "normal_children"], [1, 3, 1, "", "normal_parents"], [1, 3, 1, "", "num_asm_lines"], [1, 3, 1, "", "num_edges"], [1, 3, 1, "", "num_edges_in"], [1, 3, 1, "", "num_edges_out"], [1, 4, 1, "", "parent_function"], [1, 2, 1, "", "remove_edge"]], "bincfg.cfg.cfg_dataset": [[1, 1, 1, "", "CFGDataset"]], "bincfg.cfg.cfg_dataset.CFGDataset": [[1, 2, 1, "", "add_data"], [1, 3, 1, "", "asm_counts"], [1, 4, 1, "", "cfgs"], [1, 2, 1, "", "load"], [1, 4, 1, "", "metadata"], [1, 2, 1, "", "normalize"], [1, 4, 1, "", "normalizer"], [1, 3, 1, "", "num_asm_lines"], [1, 3, 1, "", "num_blocks"], [1, 3, 1, "", "num_cfgs"], [1, 3, 1, "", "num_edges"], [1, 3, 1, "", "num_functions"], [1, 2, 1, "", "save"]], "bincfg.cfg.cfg_edge": [[1, 1, 1, "", "CFGEdge"], [1, 1, 1, "", "EdgeType"], [1, 6, 1, "", "get_edge_type"]], "bincfg.cfg.cfg_edge.CFGEdge": [[1, 4, 1, "", "edge_type"], [1, 4, 1, "", "from_block"], [1, 3, 1, "", "is_branch"], [1, 3, 1, "", "is_function_call_edge"], [1, 3, 1, "", "is_normal_edge"], [1, 4, 1, "", "to_block"]], "bincfg.cfg.cfg_edge.EdgeType": [[1, 4, 1, "", "FUNCTION_CALL"], [1, 4, 1, "", "NORMAL"]], "bincfg.cfg.cfg_function": [[1, 1, 1, "", "CFGFunction"]], "bincfg.cfg.cfg_function.CFGFunction": [[1, 4, 1, "", "address"], [1, 3, 1, "", "asm_counts"], [1, 4, 1, "", "blocks"], [1, 3, 1, "", "called_by"], [1, 3, 1, "", "function_entry_block"], [1, 3, 1, "", "is_extern_function"], [1, 3, 1, "", "is_intern_function"], [1, 3, 1, "", "is_recursive"], [1, 3, 1, "", "is_root_function"], [1, 4, 1, "", "name"], [1, 3, 1, "", "nice_name"], [1, 3, 1, "", "num_asm_lines"], [1, 3, 1, "", "num_blocks"], [1, 3, 1, "", "num_fc_edges"], [1, 4, 1, "", "parent_cfg"], [1, 3, 1, "", "symbol_name"]], "bincfg.cfg.cfg_parsers": [[1, 5, 1, "", "CFGParseError"], [1, 6, 1, "", "get_asm_from_node_label"], [1, 6, 1, "", "parse_cfg_data"], [1, 6, 1, "", "parse_ghidra_parquet"], [1, 6, 1, "", "parse_rose_gv"], [1, 6, 1, "", "parse_rose_txt"]], "bincfg.cfg.mem_cfg": [[1, 1, 1, "", "MemCFG"]], "bincfg.cfg.mem_cfg.MemCFG": [[1, 1, 1, "", "BlockInfoBitMask"], [1, 4, 1, "", "asm_lines"], [1, 4, 1, "", "block_asm_idx"], [1, 4, 1, "", "block_flags"], [1, 4, 1, "", "block_func_idx"], [1, 4, 1, "", "block_labels"], [1, 4, 1, "", "function_name_to_idx"], [1, 2, 1, "", "get_block"], [1, 2, 1, "", "get_block_asm_lines"], [1, 2, 1, "", "get_block_edges_out"], [1, 2, 1, "", "get_block_flags"], [1, 2, 1, "", "get_block_function_idx"], [1, 2, 1, "", "get_block_function_name"], [1, 2, 1, "", "get_block_info"], [1, 2, 1, "", "get_block_labels"], [1, 2, 1, "", "get_coo_indices"], [1, 2, 1, "", "get_edge_values"], [1, 4, 1, "", "graph_c"], [1, 4, 1, "", "graph_r"], [1, 2, 1, "", "is_block_extern_function"], [1, 2, 1, "", "is_block_function_call"], [1, 2, 1, "", "is_block_function_entry"], [1, 2, 1, "", "is_block_function_jump"], [1, 2, 1, "", "is_block_function_return"], [1, 2, 1, "", "is_block_labeled"], [1, 2, 1, "", "is_block_multi_function_call"], [1, 2, 1, "", "load"], [1, 4, 1, "", "metadata"], [1, 2, 1, "", "normalize"], [1, 4, 1, "", "normalizer"], [1, 3, 1, "", "num_asm_lines"], [1, 3, 1, "", "num_blocks"], [1, 3, 1, "", "num_edges"], [1, 3, 1, "", "num_functions"], [1, 2, 1, "", "save"], [1, 2, 1, "", "to_adjacency_matrix"], [1, 4, 1, "", "tokens"]], "bincfg.cfg.mem_cfg.MemCFG.BlockInfoBitMask": [[1, 4, 1, "", "IS_FUNCTION_CALL"], [1, 4, 1, "", "IS_FUNCTION_ENTRY"], [1, 4, 1, "", "IS_FUNCTION_JUMP"], [1, 4, 1, "", "IS_FUNCTION_RETURN"], [1, 4, 1, "", "IS_IN_EXTERN_FUNCTION"], [1, 4, 1, "", "IS_MULTI_FUNCTION_CALL"]], "bincfg.cfg.mem_cfg_dataset": [[1, 1, 1, "", "MemCFGDataset"]], "bincfg.cfg.mem_cfg_dataset.MemCFGDataset": [[1, 2, 1, "", "add_data"], [1, 4, 1, "", "cfgs"], [1, 2, 1, "", "load"], [1, 4, 1, "", "metadata"], [1, 2, 1, "", "normalize"], [1, 4, 1, "", "normalizer"], [1, 3, 1, "", "num_blocks"], [1, 2, 1, "", "remove_cfg"], [1, 2, 1, "", "save"], [1, 2, 1, "", "train_test_split"], [1, 4, 1, "", "using_tokens"]], "bincfg.labeling": [[2, 0, 0, "-", "node_labels"], [2, 0, 0, "-", "parse_cfg_labels"]], "bincfg.labeling.node_labels": [[2, 7, 1, "", "DEFAULT_HEADER_PATH"], [2, 7, 1, "", "NODE_LABELS"], [2, 6, 1, "", "generate_c_header_file"], [2, 6, 1, "", "get_node_label"]], "bincfg.labeling.parse_cfg_labels": [[2, 6, 1, "", "parse_node_labels"]], "bincfg.normalization": [[3, 0, 0, "-", "base_normalizer"], [3, 0, 0, "-", "base_tokenizer"], [3, 0, 0, "-", "builtin_normalizers"], [3, 0, 0, "-", "norm_utils"], [3, 0, 0, "-", "normalize"], [3, 0, 0, "-", "tokenization_constants"]], "bincfg.normalization.base_normalizer": [[3, 1, 1, "", "BaseNormalizer"], [3, 1, 1, "", "MetaNorm"]], "bincfg.normalization.base_normalizer.BaseNormalizer": [[3, 4, 1, "", "DEFAULT_TOKENIZATION_LEVEL"], [3, 2, 1, "", "handle_function_call"], [3, 2, 1, "", "handle_ignored"], [3, 2, 1, "", "handle_immediate"], [3, 2, 1, "", "handle_instruction"], [3, 2, 1, "", "handle_jump"], [3, 2, 1, "", "handle_memory_expression"], [3, 2, 1, "", "handle_memory_size"], [3, 2, 1, "", "handle_mismatch"], [3, 2, 1, "", "handle_newline"], [3, 2, 1, "", "handle_opcode"], [3, 2, 1, "", "handle_prefix"], [3, 2, 1, "", "handle_register"], [3, 2, 1, "", "handle_rose_info"], [3, 2, 1, "", "handle_unknown_token"], [3, 2, 1, "", "hash_token"], [3, 2, 1, "", "normalize"], [3, 2, 1, "", "register_opcode_handler"], [3, 4, 1, "", "token_sep"], [3, 4, 1, "", "tokenization_level"], [3, 2, 1, "", "tokenize"], [3, 4, 1, "", "tokenizer"]], "bincfg.normalization.base_tokenizer": [[3, 1, 1, "", "BaseTokenizer"]], "bincfg.normalization.base_tokenizer.BaseTokenizer": [[3, 4, 1, "", "DEFAULT_NEWLINE_TUPLE"], [3, 2, 1, "", "on_token_mismatch"], [3, 2, 1, "", "tokenize"]], "bincfg.normalization.builtin_normalizers": [[3, 1, 1, "", "CompressedStatsNormalizer"], [3, 1, 1, "", "DeepBinDiffNormalizer"], [3, 1, 1, "", "DeepSemanticNormalizer"], [3, 1, 1, "", "InnerEyeNormalizer"], [3, 1, 1, "", "MyNormalizer"], [3, 1, 1, "", "SafeNormalizer"], [3, 6, 1, "", "get_normalizer"]], "bincfg.normalization.builtin_normalizers.CompressedStatsNormalizer": [[3, 4, 1, "", "DEFAULT_TOKENIZATION_LEVEL"], [3, 2, 1, "", "handle_function_call"], [3, 2, 1, "", "handle_immediate"], [3, 2, 1, "", "handle_jump"], [3, 2, 1, "", "handle_memory_size"], [3, 2, 1, "", "handle_register"], [3, 4, 1, "", "tokenization_level"]], "bincfg.normalization.builtin_normalizers.DeepBinDiffNormalizer": [[3, 4, 1, "", "DEFAULT_TOKENIZATION_LEVEL"], [3, 2, 1, "", "handle_function_call"], [3, 2, 1, "", "handle_immediate"], [3, 2, 1, "", "handle_memory_expression"], [3, 2, 1, "", "handle_memory_size"], [3, 2, 1, "", "handle_register"], [3, 4, 1, "", "tokenization_level"]], "bincfg.normalization.builtin_normalizers.DeepSemanticNormalizer": [[3, 4, 1, "", "DEFAULT_TOKENIZATION_LEVEL"], [3, 2, 1, "", "handle_function_call"], [3, 2, 1, "", "handle_immediate"], [3, 2, 1, "", "handle_jump"], [3, 2, 1, "", "handle_memory_size"], [3, 2, 1, "", "handle_register"], [3, 4, 1, "", "tokenization_level"]], "bincfg.normalization.builtin_normalizers.InnerEyeNormalizer": [[3, 4, 1, "", "DEFAULT_TOKENIZATION_LEVEL"], [3, 2, 1, "", "handle_function_call"], [3, 2, 1, "", "handle_immediate"], [3, 2, 1, "", "handle_memory_size"], [3, 4, 1, "", "tokenization_level"]], "bincfg.normalization.builtin_normalizers.MyNormalizer": [[3, 4, 1, "", "DEFAULT_TOKENIZATION_LEVEL"], [3, 2, 1, "", "handle_function_call"], [3, 2, 1, "", "handle_jump"], [3, 2, 1, "", "handle_memory_size"], [3, 2, 1, "", "handle_register"], [3, 4, 1, "", "tokenization_level"]], "bincfg.normalization.builtin_normalizers.SafeNormalizer": [[3, 4, 1, "", "DEFAULT_TOKENIZATION_LEVEL"], [3, 2, 1, "", "handle_function_call"], [3, 2, 1, "", "handle_memory_size"], [3, 4, 1, "", "tokenization_level"]], "bincfg.normalization.norm_utils": [[3, 6, 1, "", "clean_incoming_instruction"], [3, 6, 1, "", "clean_nop"], [3, 6, 1, "", "eq_special_funcs"], [3, 6, 1, "", "ignore"], [3, 6, 1, "", "imm_to_int"], [3, 6, 1, "", "memsize_value"], [3, 6, 1, "", "replace_function_call_immediate"], [3, 6, 1, "", "replace_general_register"], [3, 6, 1, "", "replace_jmpdst"], [3, 6, 1, "", "replace_memory_expression"], [3, 6, 1, "", "return_immstr"], [3, 6, 1, "", "special_function_call"], [3, 6, 1, "", "threshold_immediate"]], "bincfg.normalization.normalize": [[3, 6, 1, "", "normalize_cfg_data"]], "bincfg.normalization.tokenization_constants": [[3, 1, 1, "", "ARCH"], [3, 7, 1, "", "DEFAULT_TOKENS"], [3, 5, 1, "", "TokenMismatchError"], [3, 1, 1, "", "TokenizationLevel"], [3, 1, 1, "", "Tokens"]], "bincfg.normalization.tokenization_constants.ARCH": [[3, 4, 1, "", "X86"], [3, 4, 1, "", "X86_64"]], "bincfg.normalization.tokenization_constants.TokenizationLevel": [[3, 4, 1, "", "AUTO"], [3, 4, 1, "", "INSTRUCTION"], [3, 4, 1, "", "OPCODE"]], "bincfg.normalization.tokenization_constants.Tokens": [[3, 4, 1, "", "BRANCH_PREDICTION"], [3, 4, 1, "", "CLOSE_BRACKET"], [3, 4, 1, "", "IMMEDIATE"], [3, 4, 1, "", "INSTRUCTION_ADDRESS"], [3, 4, 1, "", "INSTRUCTION_PREFIX"], [3, 4, 1, "", "INSTRUCTION_START"], [3, 4, 1, "", "MEMORY_SIZE"], [3, 4, 1, "", "MISMATCH"], [3, 4, 1, "", "NEWLINE"], [3, 4, 1, "", "OPCODE"], [3, 4, 1, "", "OPEN_BRACKET"], [3, 4, 1, "", "PLUS_SIGN"], [3, 4, 1, "", "PTR"], [3, 4, 1, "", "REGISTER"], [3, 4, 1, "", "ROSE_INFO"], [3, 4, 1, "", "SEGMENT"], [3, 4, 1, "", "SEGMENT_ADDRESS"], [3, 4, 1, "", "SPACING"], [3, 4, 1, "", "TIMES_SIGN"]], "bincfg.utils": [[4, 0, 0, "-", "cfg_utils"], [4, 0, 0, "-", "misc_utils"], [4, 0, 0, "-", "mp_utils"]], "bincfg.utils.cfg_utils": [[4, 6, 1, "", "check_for_normalizer"], [4, 6, 1, "", "get_address"], [4, 6, 1, "", "get_special_function_names"], [4, 6, 1, "", "update_atomic_tokens"], [4, 6, 1, "", "update_memcfg_tokens"]], "bincfg.utils.misc_utils": [[4, 5, 1, "", "EqualityCheckingError"], [4, 5, 1, "", "EqualityError"], [4, 6, 1, "", "arg_array_split"], [4, 6, 1, "", "eq_obj"], [4, 6, 1, "", "eq_obj_err"], [4, 6, 1, "", "get_module"], [4, 6, 1, "", "get_smallest_np_dtype"], [4, 6, 1, "", "hash_obj"], [4, 6, 1, "", "isinstance_with_iterables"], [4, 6, 1, "", "log"], [4, 6, 1, "", "progressbar"], [4, 6, 1, "", "scatter_nd_numpy"], [4, 6, 1, "", "set_logger"], [4, 6, 1, "", "timeout_wrapper"]], "bincfg.utils.mp_utils": [[4, 5, 1, "", "AquireLockError"], [4, 1, 1, "", "AtomicData"], [4, 1, 1, "", "AtomicTokenDict"], [4, 5, 1, "", "MultiprocessingError"], [4, 1, 1, "", "RedirectStdStreams"], [4, 1, 1, "", "ThreadPoolManager"], [4, 6, 1, "", "get_thread_pool"], [4, 6, 1, "", "init_thread_pool"], [4, 6, 1, "", "map_mp"], [4, 6, 1, "", "terminate_thread_pool"]], "bincfg.utils.mp_utils.AtomicData": [[4, 2, 1, "", "aquire_lock"], [4, 2, 1, "", "atomic_read"], [4, 2, 1, "", "atomic_update"], [4, 2, 1, "", "atomic_write"], [4, 2, 1, "", "delete_file"], [4, 2, 1, "", "release_lock"]], "bincfg.utils.mp_utils.AtomicTokenDict": [[4, 2, 1, "", "addtokens"], [4, 3, 1, "", "data"], [4, 2, 1, "", "delete_file"], [4, 2, 1, "", "get"], [4, 2, 1, "", "items"], [4, 2, 1, "", "keys"], [4, 2, 1, "", "setdefault"], [4, 2, 1, "", "update"], [4, 2, 1, "", "values"]], "bincfg.utils.mp_utils.ThreadPoolManager": [[4, 4, 1, "", "num_workers"], [4, 4, 1, "", "pool"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:exception", "6": "py:function", "7": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"], "7": ["py", "data", "Python data"]}, "titleterms": {"bincfg": [0, 1, 2, 3, 4, 5, 6], "packag": [0, 1, 2, 3, 4], "subpackag": 0, "submodul": [0, 1, 2, 3, 4], "cfg": [0, 1], "modul": [0, 1, 2, 3, 4], "cfg_basic_block": [0, 1], "cfg_dataset": [0, 1], "cfg_edg": [0, 1], "cfg_function": [0, 1], "cfg_parser": [0, 1], "mem_cfg": [0, 1], "mem_cfg_dataset": [0, 1], "content": [0, 1, 2, 3, 4, 5], "label": 2, "node_label": 2, "parse_cfg_label": 2, "normal": 3, "token": 3, "custom": 3, "extra": 3, "info": 3, "base_norm": 3, "base_token": 3, "builtin_norm": 3, "norm_util": 3, "tokenization_const": 3, "util": 4, "cfg_util": 4, "misc_util": 4, "mp_util": 4, "welcom": 5, "": 5, "document": 5, "instal": 5, "instruct": 5, "overview": 5, "indic": 5, "tabl": 5}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"bincfg package": [[0, "bincfg-package"]], "Subpackages": [[0, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"]], "bincfg.cfg module": [[0, "module-bincfg.cfg"]], "bincfg.cfg_basic_block module": [[0, "module-bincfg.cfg_basic_block"]], "bincfg.cfg_dataset module": [[0, "module-bincfg.cfg_dataset"]], "bincfg.cfg_edge module": [[0, "module-bincfg.cfg_edge"]], "bincfg.cfg_function module": [[0, "module-bincfg.cfg_function"]], "bincfg.cfg_parsers module": [[0, "module-bincfg.cfg_parsers"]], "bincfg.mem_cfg module": [[0, "module-bincfg.mem_cfg"]], "bincfg.mem_cfg_dataset module": [[0, "module-bincfg.mem_cfg_dataset"]], "Module contents": [[0, "module-bincfg"], [1, "module-contents"], [2, "module-bincfg.labeling"], [3, "module-contents"], [4, "module-contents"]], "bincfg.cfg package": [[1, "bincfg-cfg-package"]], "bincfg.cfg.cfg module": [[1, "module-bincfg.cfg.cfg"]], "bincfg.cfg.cfg_basic_block module": [[1, "module-bincfg.cfg.cfg_basic_block"]], "bincfg.cfg.cfg_dataset module": [[1, "module-bincfg.cfg.cfg_dataset"]], "bincfg.cfg.cfg_edge module": [[1, "module-bincfg.cfg.cfg_edge"]], "bincfg.cfg.cfg_function module": [[1, "module-bincfg.cfg.cfg_function"]], "bincfg.cfg.cfg_parsers module": [[1, "module-bincfg.cfg.cfg_parsers"]], "bincfg.cfg.mem_cfg module": [[1, "module-bincfg.cfg.mem_cfg"]], "bincfg.cfg.mem_cfg_dataset module": [[1, "module-bincfg.cfg.mem_cfg_dataset"]], "bincfg.labeling package": [[2, "bincfg-labeling-package"]], "bincfg.labeling.node_labels module": [[2, "module-bincfg.labeling.node_labels"]], "bincfg.labeling.parse_cfg_labels module": [[2, "module-bincfg.labeling.parse_cfg_labels"]], "bincfg.normalization package": [[3, "bincfg-normalization-package"]], "Tokenization": [[3, "tokenization"]], "Normalization": [[3, "normalization"]], "Custom Normalizers": [[3, "custom-normalizers"]], "Extra info": [[3, "extra-info"]], "bincfg.normalization.base_normalizer module": [[3, "module-bincfg.normalization.base_normalizer"]], "bincfg.normalization.base_tokenizer module": [[3, "module-bincfg.normalization.base_tokenizer"]], "bincfg.normalization.builtin_normalizers module": [[3, "module-bincfg.normalization.builtin_normalizers"]], "bincfg.normalization.norm_utils module": [[3, "module-bincfg.normalization.norm_utils"]], "bincfg.normalization.normalize module": [[3, "module-bincfg.normalization.normalize"]], "bincfg.normalization.tokenization_constants module": [[3, "module-bincfg.normalization.tokenization_constants"]], "bincfg.utils package": [[4, "bincfg-utils-package"]], "bincfg.utils.cfg_utils module": [[4, "module-bincfg.utils.cfg_utils"]], "bincfg.utils.misc_utils module": [[4, "module-bincfg.utils.misc_utils"]], "bincfg.utils.mp_utils module": [[4, "module-bincfg.utils.mp_utils"]], "Welcome to BinCFG\u2019s documentation!": [[5, "welcome-to-bincfg-s-documentation"]], "Installation Instructions": [[5, "installation-instructions"]], "Overview": [[5, "overview"]], "Contents:": [[5, null]], "Indices and tables": [[5, "indices-and-tables"]], "bincfg": [[6, "bincfg"]]}, "indexentries": {"bincfg": [[0, "module-bincfg"]], "bincfg.cfg": [[0, "module-bincfg.cfg"]], "bincfg.cfg_basic_block": [[0, "module-bincfg.cfg_basic_block"]], "bincfg.cfg_dataset": [[0, "module-bincfg.cfg_dataset"]], "bincfg.cfg_edge": [[0, "module-bincfg.cfg_edge"]], "bincfg.cfg_function": [[0, "module-bincfg.cfg_function"]], "bincfg.cfg_parsers": [[0, "module-bincfg.cfg_parsers"]], "bincfg.mem_cfg": [[0, "module-bincfg.mem_cfg"]], "bincfg.mem_cfg_dataset": [[0, "module-bincfg.mem_cfg_dataset"]], "module": [[0, "module-bincfg"], [0, "module-bincfg.cfg"], [0, "module-bincfg.cfg_basic_block"], [0, "module-bincfg.cfg_dataset"], [0, "module-bincfg.cfg_edge"], [0, "module-bincfg.cfg_function"], [0, "module-bincfg.cfg_parsers"], [0, "module-bincfg.mem_cfg"], [0, "module-bincfg.mem_cfg_dataset"], [1, "module-bincfg.cfg.cfg"], [1, "module-bincfg.cfg.cfg_basic_block"], [1, "module-bincfg.cfg.cfg_dataset"], [1, "module-bincfg.cfg.cfg_edge"], [1, "module-bincfg.cfg.cfg_function"], [1, "module-bincfg.cfg.cfg_parsers"], [1, "module-bincfg.cfg.mem_cfg"], [1, "module-bincfg.cfg.mem_cfg_dataset"], [2, "module-bincfg.labeling"], [2, "module-bincfg.labeling.node_labels"], [2, "module-bincfg.labeling.parse_cfg_labels"], [3, "module-bincfg.normalization.base_normalizer"], [3, "module-bincfg.normalization.base_tokenizer"], [3, "module-bincfg.normalization.builtin_normalizers"], [3, "module-bincfg.normalization.norm_utils"], [3, "module-bincfg.normalization.normalize"], [3, "module-bincfg.normalization.tokenization_constants"], [4, "module-bincfg.utils.cfg_utils"], [4, "module-bincfg.utils.misc_utils"], [4, "module-bincfg.utils.mp_utils"]], "cfg (class in bincfg.cfg.cfg)": [[1, "bincfg.cfg.cfg.CFG"]], "cfgbasicblock (class in bincfg.cfg.cfg_basic_block)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock"]], "cfgdataset (class in bincfg.cfg.cfg_dataset)": [[1, "bincfg.cfg.cfg_dataset.CFGDataset"]], "cfgedge (class in bincfg.cfg.cfg_edge)": [[1, "bincfg.cfg.cfg_edge.CFGEdge"]], "cfgfunction (class in bincfg.cfg.cfg_function)": [[1, "bincfg.cfg.cfg_function.CFGFunction"]], "cfgparseerror": [[1, "bincfg.cfg.cfg_parsers.CFGParseError"]], "edgetype (class in bincfg.cfg.cfg_edge)": [[1, "bincfg.cfg.cfg_edge.EdgeType"]], "function_call (bincfg.cfg.cfg_edge.edgetype attribute)": [[1, "bincfg.cfg.cfg_edge.EdgeType.FUNCTION_CALL"]], "is_function_call (bincfg.cfg.mem_cfg.memcfg.blockinfobitmask attribute)": [[1, "bincfg.cfg.mem_cfg.MemCFG.BlockInfoBitMask.IS_FUNCTION_CALL"]], "is_function_entry (bincfg.cfg.mem_cfg.memcfg.blockinfobitmask attribute)": [[1, "bincfg.cfg.mem_cfg.MemCFG.BlockInfoBitMask.IS_FUNCTION_ENTRY"]], "is_function_jump (bincfg.cfg.mem_cfg.memcfg.blockinfobitmask attribute)": [[1, "bincfg.cfg.mem_cfg.MemCFG.BlockInfoBitMask.IS_FUNCTION_JUMP"]], "is_function_return (bincfg.cfg.mem_cfg.memcfg.blockinfobitmask attribute)": [[1, "bincfg.cfg.mem_cfg.MemCFG.BlockInfoBitMask.IS_FUNCTION_RETURN"]], "is_in_extern_function (bincfg.cfg.mem_cfg.memcfg.blockinfobitmask attribute)": [[1, "bincfg.cfg.mem_cfg.MemCFG.BlockInfoBitMask.IS_IN_EXTERN_FUNCTION"]], "is_multi_function_call (bincfg.cfg.mem_cfg.memcfg.blockinfobitmask attribute)": [[1, "bincfg.cfg.mem_cfg.MemCFG.BlockInfoBitMask.IS_MULTI_FUNCTION_CALL"]], "invalidinsertionmemoryaddresserror": [[1, "bincfg.cfg.cfg.InvalidInsertionMemoryAddressError"]], "memcfg (class in bincfg.cfg.mem_cfg)": [[1, "bincfg.cfg.mem_cfg.MemCFG"]], "memcfg.blockinfobitmask (class in bincfg.cfg.mem_cfg)": [[1, "bincfg.cfg.mem_cfg.MemCFG.BlockInfoBitMask"]], "memcfgdataset (class in bincfg.cfg.mem_cfg_dataset)": [[1, "bincfg.cfg.mem_cfg_dataset.MemCFGDataset"]], "normal (bincfg.cfg.cfg_edge.edgetype attribute)": [[1, "bincfg.cfg.cfg_edge.EdgeType.NORMAL"]], "add_data() (bincfg.cfg.cfg_dataset.cfgdataset method)": [[1, "bincfg.cfg.cfg_dataset.CFGDataset.add_data"]], "add_data() (bincfg.cfg.mem_cfg_dataset.memcfgdataset method)": [[1, "bincfg.cfg.mem_cfg_dataset.MemCFGDataset.add_data"]], "add_function() (bincfg.cfg.cfg.cfg method)": [[1, "bincfg.cfg.cfg.CFG.add_function"]], "address (bincfg.cfg.cfg_basic_block.cfgbasicblock attribute)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.address"]], "address (bincfg.cfg.cfg_function.cfgfunction attribute)": [[1, "bincfg.cfg.cfg_function.CFGFunction.address"]], "all_edges (bincfg.cfg.cfg_basic_block.cfgbasicblock property)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.all_edges"]], "asm_counts (bincfg.cfg.cfg.cfg property)": [[1, "bincfg.cfg.cfg.CFG.asm_counts"]], "asm_counts (bincfg.cfg.cfg_basic_block.cfgbasicblock property)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.asm_counts"]], "asm_counts (bincfg.cfg.cfg_dataset.cfgdataset property)": [[1, "bincfg.cfg.cfg_dataset.CFGDataset.asm_counts"]], "asm_counts (bincfg.cfg.cfg_function.cfgfunction property)": [[1, "bincfg.cfg.cfg_function.CFGFunction.asm_counts"]], "asm_lines (bincfg.cfg.cfg_basic_block.cfgbasicblock attribute)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.asm_lines"]], "asm_lines (bincfg.cfg.mem_cfg.memcfg attribute)": [[1, "bincfg.cfg.mem_cfg.MemCFG.asm_lines"]], "asm_memory_addresses (bincfg.cfg.cfg_basic_block.cfgbasicblock property)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.asm_memory_addresses"]], "bincfg.cfg.cfg": [[1, "module-bincfg.cfg.cfg"]], "bincfg.cfg.cfg_basic_block": [[1, "module-bincfg.cfg.cfg_basic_block"]], "bincfg.cfg.cfg_dataset": [[1, "module-bincfg.cfg.cfg_dataset"]], "bincfg.cfg.cfg_edge": [[1, "module-bincfg.cfg.cfg_edge"]], "bincfg.cfg.cfg_function": [[1, "module-bincfg.cfg.cfg_function"]], "bincfg.cfg.cfg_parsers": [[1, "module-bincfg.cfg.cfg_parsers"]], "bincfg.cfg.mem_cfg": [[1, "module-bincfg.cfg.mem_cfg"]], "bincfg.cfg.mem_cfg_dataset": [[1, "module-bincfg.cfg.mem_cfg_dataset"]], "block_asm_idx (bincfg.cfg.mem_cfg.memcfg attribute)": [[1, "bincfg.cfg.mem_cfg.MemCFG.block_asm_idx"]], "block_flags (bincfg.cfg.mem_cfg.memcfg attribute)": [[1, "bincfg.cfg.mem_cfg.MemCFG.block_flags"]], "block_func_idx (bincfg.cfg.mem_cfg.memcfg attribute)": [[1, "bincfg.cfg.mem_cfg.MemCFG.block_func_idx"]], "block_labels (bincfg.cfg.mem_cfg.memcfg attribute)": [[1, "bincfg.cfg.mem_cfg.MemCFG.block_labels"]], "blocks (bincfg.cfg.cfg.cfg property)": [[1, "bincfg.cfg.cfg.CFG.blocks"]], "blocks (bincfg.cfg.cfg_function.cfgfunction attribute)": [[1, "bincfg.cfg.cfg_function.CFGFunction.blocks"]], "blocks_dict (bincfg.cfg.cfg.cfg attribute)": [[1, "bincfg.cfg.cfg.CFG.blocks_dict"]], "called_by (bincfg.cfg.cfg_function.cfgfunction property)": [[1, "bincfg.cfg.cfg_function.CFGFunction.called_by"]], "calls() (bincfg.cfg.cfg_basic_block.cfgbasicblock method)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.calls"]], "cfgs (bincfg.cfg.cfg_dataset.cfgdataset attribute)": [[1, "bincfg.cfg.cfg_dataset.CFGDataset.cfgs"]], "cfgs (bincfg.cfg.mem_cfg_dataset.memcfgdataset attribute)": [[1, "bincfg.cfg.mem_cfg_dataset.MemCFGDataset.cfgs"]], "edge_type (bincfg.cfg.cfg_edge.cfgedge attribute)": [[1, "bincfg.cfg.cfg_edge.CFGEdge.edge_type"]], "edges (bincfg.cfg.cfg.cfg property)": [[1, "bincfg.cfg.cfg.CFG.edges"]], "edges_in (bincfg.cfg.cfg_basic_block.cfgbasicblock attribute)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.edges_in"]], "edges_out (bincfg.cfg.cfg_basic_block.cfgbasicblock attribute)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.edges_out"]], "from_block (bincfg.cfg.cfg_edge.cfgedge attribute)": [[1, "bincfg.cfg.cfg_edge.CFGEdge.from_block"]], "from_cfg_dict() (bincfg.cfg.cfg.cfg class method)": [[1, "bincfg.cfg.cfg.CFG.from_cfg_dict"]], "from_networkx() (bincfg.cfg.cfg.cfg class method)": [[1, "bincfg.cfg.cfg.CFG.from_networkx"]], "function_entry_block (bincfg.cfg.cfg_function.cfgfunction property)": [[1, "bincfg.cfg.cfg_function.CFGFunction.function_entry_block"]], "function_name_to_idx (bincfg.cfg.mem_cfg.memcfg attribute)": [[1, "bincfg.cfg.mem_cfg.MemCFG.function_name_to_idx"]], "functions (bincfg.cfg.cfg.cfg property)": [[1, "bincfg.cfg.cfg.CFG.functions"]], "functions_dict (bincfg.cfg.cfg.cfg attribute)": [[1, "bincfg.cfg.cfg.CFG.functions_dict"]], "get_asm_from_node_label() (in module bincfg.cfg.cfg_parsers)": [[1, "bincfg.cfg.cfg_parsers.get_asm_from_node_label"]], "get_block() (bincfg.cfg.cfg.cfg method)": [[1, "bincfg.cfg.cfg.CFG.get_block"]], "get_block() (bincfg.cfg.mem_cfg.memcfg method)": [[1, "bincfg.cfg.mem_cfg.MemCFG.get_block"]], "get_block_asm_lines() (bincfg.cfg.mem_cfg.memcfg method)": [[1, "bincfg.cfg.mem_cfg.MemCFG.get_block_asm_lines"]], "get_block_containing_address() (bincfg.cfg.cfg.cfg method)": [[1, "bincfg.cfg.cfg.CFG.get_block_containing_address"]], "get_block_edges_out() (bincfg.cfg.mem_cfg.memcfg method)": [[1, "bincfg.cfg.mem_cfg.MemCFG.get_block_edges_out"]], "get_block_flags() (bincfg.cfg.mem_cfg.memcfg method)": [[1, "bincfg.cfg.mem_cfg.MemCFG.get_block_flags"]], "get_block_function_idx() (bincfg.cfg.mem_cfg.memcfg method)": [[1, "bincfg.cfg.mem_cfg.MemCFG.get_block_function_idx"]], "get_block_function_name() (bincfg.cfg.mem_cfg.memcfg method)": [[1, "bincfg.cfg.mem_cfg.MemCFG.get_block_function_name"]], "get_block_info() (bincfg.cfg.mem_cfg.memcfg method)": [[1, "bincfg.cfg.mem_cfg.MemCFG.get_block_info"]], "get_block_labels() (bincfg.cfg.mem_cfg.memcfg method)": [[1, "bincfg.cfg.mem_cfg.MemCFG.get_block_labels"]], "get_cfg_build_code() (bincfg.cfg.cfg.cfg method)": [[1, "bincfg.cfg.cfg.CFG.get_cfg_build_code"]], "get_compressed_stats() (bincfg.cfg.cfg.cfg method)": [[1, "bincfg.cfg.cfg.CFG.get_compressed_stats"]], "get_coo_indices() (bincfg.cfg.mem_cfg.memcfg method)": [[1, "bincfg.cfg.mem_cfg.MemCFG.get_coo_indices"]], "get_edge_type() (in module bincfg.cfg.cfg_edge)": [[1, "bincfg.cfg.cfg_edge.get_edge_type"]], "get_edge_values() (bincfg.cfg.mem_cfg.memcfg method)": [[1, "bincfg.cfg.mem_cfg.MemCFG.get_edge_values"]], "get_function() (bincfg.cfg.cfg.cfg method)": [[1, "bincfg.cfg.cfg.CFG.get_function"]], "get_function_by_name() (bincfg.cfg.cfg.cfg method)": [[1, "bincfg.cfg.cfg.CFG.get_function_by_name"]], "get_sorted_edges() (bincfg.cfg.cfg_basic_block.cfgbasicblock method)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.get_sorted_edges"]], "graph_c (bincfg.cfg.mem_cfg.memcfg attribute)": [[1, "bincfg.cfg.mem_cfg.MemCFG.graph_c"]], "graph_r (bincfg.cfg.mem_cfg.memcfg attribute)": [[1, "bincfg.cfg.mem_cfg.MemCFG.graph_r"]], "has_edge() (bincfg.cfg.cfg_basic_block.cfgbasicblock method)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.has_edge"]], "has_edge_from() (bincfg.cfg.cfg_basic_block.cfgbasicblock method)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.has_edge_from"]], "has_edge_to() (bincfg.cfg.cfg_basic_block.cfgbasicblock method)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.has_edge_to"]], "insert_library() (bincfg.cfg.cfg.cfg method)": [[1, "bincfg.cfg.cfg.CFG.insert_library"]], "instruction_addresses (bincfg.cfg.cfg_basic_block.cfgbasicblock property)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.instruction_addresses"]], "is_block_extern_function() (bincfg.cfg.mem_cfg.memcfg method)": [[1, "bincfg.cfg.mem_cfg.MemCFG.is_block_extern_function"]], "is_block_function_call() (bincfg.cfg.mem_cfg.memcfg method)": [[1, "bincfg.cfg.mem_cfg.MemCFG.is_block_function_call"]], "is_block_function_entry() (bincfg.cfg.mem_cfg.memcfg method)": [[1, "bincfg.cfg.mem_cfg.MemCFG.is_block_function_entry"]], "is_block_function_jump() (bincfg.cfg.mem_cfg.memcfg method)": [[1, "bincfg.cfg.mem_cfg.MemCFG.is_block_function_jump"]], "is_block_function_return() (bincfg.cfg.mem_cfg.memcfg method)": [[1, "bincfg.cfg.mem_cfg.MemCFG.is_block_function_return"]], "is_block_labeled() (bincfg.cfg.mem_cfg.memcfg method)": [[1, "bincfg.cfg.mem_cfg.MemCFG.is_block_labeled"]], "is_block_multi_function_call() (bincfg.cfg.mem_cfg.memcfg method)": [[1, "bincfg.cfg.mem_cfg.MemCFG.is_block_multi_function_call"]], "is_branch (bincfg.cfg.cfg_edge.cfgedge property)": [[1, "bincfg.cfg.cfg_edge.CFGEdge.is_branch"]], "is_extern_function (bincfg.cfg.cfg_function.cfgfunction property)": [[1, "bincfg.cfg.cfg_function.CFGFunction.is_extern_function"]], "is_function_call (bincfg.cfg.cfg_basic_block.cfgbasicblock property)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.is_function_call"]], "is_function_call_edge (bincfg.cfg.cfg_edge.cfgedge property)": [[1, "bincfg.cfg.cfg_edge.CFGEdge.is_function_call_edge"]], "is_function_entry (bincfg.cfg.cfg_basic_block.cfgbasicblock property)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.is_function_entry"]], "is_function_jump (bincfg.cfg.cfg_basic_block.cfgbasicblock property)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.is_function_jump"]], "is_function_return (bincfg.cfg.cfg_basic_block.cfgbasicblock property)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.is_function_return"]], "is_intern_function (bincfg.cfg.cfg_function.cfgfunction property)": [[1, "bincfg.cfg.cfg_function.CFGFunction.is_intern_function"]], "is_multi_function_call (bincfg.cfg.cfg_basic_block.cfgbasicblock property)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.is_multi_function_call"]], "is_normal_edge (bincfg.cfg.cfg_edge.cfgedge property)": [[1, "bincfg.cfg.cfg_edge.CFGEdge.is_normal_edge"]], "is_padding_node (bincfg.cfg.cfg_basic_block.cfgbasicblock property)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.is_padding_node"]], "is_recursive (bincfg.cfg.cfg_function.cfgfunction property)": [[1, "bincfg.cfg.cfg_function.CFGFunction.is_recursive"]], "is_root_function (bincfg.cfg.cfg_function.cfgfunction property)": [[1, "bincfg.cfg.cfg_function.CFGFunction.is_root_function"]], "labels (bincfg.cfg.cfg_basic_block.cfgbasicblock attribute)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.labels"]], "load() (bincfg.cfg.cfg.cfg class method)": [[1, "bincfg.cfg.cfg.CFG.load"]], "load() (bincfg.cfg.cfg_dataset.cfgdataset class method)": [[1, "bincfg.cfg.cfg_dataset.CFGDataset.load"]], "load() (bincfg.cfg.mem_cfg.memcfg class method)": [[1, "bincfg.cfg.mem_cfg.MemCFG.load"]], "load() (bincfg.cfg.mem_cfg_dataset.memcfgdataset class method)": [[1, "bincfg.cfg.mem_cfg_dataset.MemCFGDataset.load"]], "metadata (bincfg.cfg.cfg.cfg attribute)": [[1, "bincfg.cfg.cfg.CFG.metadata"]], "metadata (bincfg.cfg.cfg_dataset.cfgdataset attribute)": [[1, "bincfg.cfg.cfg_dataset.CFGDataset.metadata"]], "metadata (bincfg.cfg.mem_cfg.memcfg attribute)": [[1, "bincfg.cfg.mem_cfg.MemCFG.metadata"]], "metadata (bincfg.cfg.mem_cfg_dataset.memcfgdataset attribute)": [[1, "bincfg.cfg.mem_cfg_dataset.MemCFGDataset.metadata"]], "name (bincfg.cfg.cfg_function.cfgfunction attribute)": [[1, "bincfg.cfg.cfg_function.CFGFunction.name"]], "nice_name (bincfg.cfg.cfg_function.cfgfunction property)": [[1, "bincfg.cfg.cfg_function.CFGFunction.nice_name"]], "normal_children (bincfg.cfg.cfg_basic_block.cfgbasicblock property)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.normal_children"]], "normal_parents (bincfg.cfg.cfg_basic_block.cfgbasicblock property)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.normal_parents"]], "normalize() (bincfg.cfg.cfg.cfg method)": [[1, "bincfg.cfg.cfg.CFG.normalize"]], "normalize() (bincfg.cfg.cfg_dataset.cfgdataset method)": [[1, "bincfg.cfg.cfg_dataset.CFGDataset.normalize"]], "normalize() (bincfg.cfg.mem_cfg.memcfg method)": [[1, "bincfg.cfg.mem_cfg.MemCFG.normalize"]], "normalize() (bincfg.cfg.mem_cfg_dataset.memcfgdataset method)": [[1, "bincfg.cfg.mem_cfg_dataset.MemCFGDataset.normalize"]], "normalizer (bincfg.cfg.cfg.cfg attribute)": [[1, "bincfg.cfg.cfg.CFG.normalizer"]], "normalizer (bincfg.cfg.cfg_dataset.cfgdataset attribute)": [[1, "bincfg.cfg.cfg_dataset.CFGDataset.normalizer"]], "normalizer (bincfg.cfg.mem_cfg.memcfg attribute)": [[1, "bincfg.cfg.mem_cfg.MemCFG.normalizer"]], "normalizer (bincfg.cfg.mem_cfg_dataset.memcfgdataset attribute)": [[1, "bincfg.cfg.mem_cfg_dataset.MemCFGDataset.normalizer"]], "num_asm_lines (bincfg.cfg.cfg.cfg property)": [[1, "bincfg.cfg.cfg.CFG.num_asm_lines"]], "num_asm_lines (bincfg.cfg.cfg_basic_block.cfgbasicblock property)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.num_asm_lines"]], "num_asm_lines (bincfg.cfg.cfg_dataset.cfgdataset property)": [[1, "bincfg.cfg.cfg_dataset.CFGDataset.num_asm_lines"]], "num_asm_lines (bincfg.cfg.cfg_function.cfgfunction property)": [[1, "bincfg.cfg.cfg_function.CFGFunction.num_asm_lines"]], "num_asm_lines (bincfg.cfg.mem_cfg.memcfg property)": [[1, "bincfg.cfg.mem_cfg.MemCFG.num_asm_lines"]], "num_blocks (bincfg.cfg.cfg.cfg property)": [[1, "bincfg.cfg.cfg.CFG.num_blocks"]], "num_blocks (bincfg.cfg.cfg_dataset.cfgdataset property)": [[1, "bincfg.cfg.cfg_dataset.CFGDataset.num_blocks"]], "num_blocks (bincfg.cfg.cfg_function.cfgfunction property)": [[1, "bincfg.cfg.cfg_function.CFGFunction.num_blocks"]], "num_blocks (bincfg.cfg.mem_cfg.memcfg property)": [[1, "bincfg.cfg.mem_cfg.MemCFG.num_blocks"]], "num_blocks (bincfg.cfg.mem_cfg_dataset.memcfgdataset property)": [[1, "bincfg.cfg.mem_cfg_dataset.MemCFGDataset.num_blocks"]], "num_cfgs (bincfg.cfg.cfg_dataset.cfgdataset property)": [[1, "bincfg.cfg.cfg_dataset.CFGDataset.num_cfgs"]], "num_edges (bincfg.cfg.cfg.cfg property)": [[1, "bincfg.cfg.cfg.CFG.num_edges"]], "num_edges (bincfg.cfg.cfg_basic_block.cfgbasicblock property)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.num_edges"]], "num_edges (bincfg.cfg.cfg_dataset.cfgdataset property)": [[1, "bincfg.cfg.cfg_dataset.CFGDataset.num_edges"]], "num_edges (bincfg.cfg.mem_cfg.memcfg property)": [[1, "bincfg.cfg.mem_cfg.MemCFG.num_edges"]], "num_edges_in (bincfg.cfg.cfg_basic_block.cfgbasicblock property)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.num_edges_in"]], "num_edges_out (bincfg.cfg.cfg_basic_block.cfgbasicblock property)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.num_edges_out"]], "num_fc_edges (bincfg.cfg.cfg_function.cfgfunction property)": [[1, "bincfg.cfg.cfg_function.CFGFunction.num_fc_edges"]], "num_functions (bincfg.cfg.cfg.cfg property)": [[1, "bincfg.cfg.cfg.CFG.num_functions"]], "num_functions (bincfg.cfg.cfg_dataset.cfgdataset property)": [[1, "bincfg.cfg.cfg_dataset.CFGDataset.num_functions"]], "num_functions (bincfg.cfg.mem_cfg.memcfg property)": [[1, "bincfg.cfg.mem_cfg.MemCFG.num_functions"]], "parent_cfg (bincfg.cfg.cfg_function.cfgfunction attribute)": [[1, "bincfg.cfg.cfg_function.CFGFunction.parent_cfg"]], "parent_function (bincfg.cfg.cfg_basic_block.cfgbasicblock attribute)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.parent_function"]], "parse_cfg_data() (in module bincfg.cfg.cfg_parsers)": [[1, "bincfg.cfg.cfg_parsers.parse_cfg_data"]], "parse_ghidra_parquet() (in module bincfg.cfg.cfg_parsers)": [[1, "bincfg.cfg.cfg_parsers.parse_ghidra_parquet"]], "parse_rose_gv() (in module bincfg.cfg.cfg_parsers)": [[1, "bincfg.cfg.cfg_parsers.parse_rose_gv"]], "parse_rose_txt() (in module bincfg.cfg.cfg_parsers)": [[1, "bincfg.cfg.cfg_parsers.parse_rose_txt"]], "remove_cfg() (bincfg.cfg.mem_cfg_dataset.memcfgdataset method)": [[1, "bincfg.cfg.mem_cfg_dataset.MemCFGDataset.remove_cfg"]], "remove_edge() (bincfg.cfg.cfg_basic_block.cfgbasicblock method)": [[1, "bincfg.cfg.cfg_basic_block.CFGBasicBlock.remove_edge"]], "save() (bincfg.cfg.cfg.cfg method)": [[1, "bincfg.cfg.cfg.CFG.save"]], "save() (bincfg.cfg.cfg_dataset.cfgdataset method)": [[1, "bincfg.cfg.cfg_dataset.CFGDataset.save"]], "save() (bincfg.cfg.mem_cfg.memcfg method)": [[1, "bincfg.cfg.mem_cfg.MemCFG.save"]], "save() (bincfg.cfg.mem_cfg_dataset.memcfgdataset method)": [[1, "bincfg.cfg.mem_cfg_dataset.MemCFGDataset.save"]], "symbol_name (bincfg.cfg.cfg_function.cfgfunction property)": [[1, "bincfg.cfg.cfg_function.CFGFunction.symbol_name"]], "to_adjacency_matrix() (bincfg.cfg.cfg.cfg method)": [[1, "bincfg.cfg.cfg.CFG.to_adjacency_matrix"]], "to_adjacency_matrix() (bincfg.cfg.mem_cfg.memcfg method)": [[1, "bincfg.cfg.mem_cfg.MemCFG.to_adjacency_matrix"]], "to_block (bincfg.cfg.cfg_edge.cfgedge attribute)": [[1, "bincfg.cfg.cfg_edge.CFGEdge.to_block"]], "to_cfg_dict() (bincfg.cfg.cfg.cfg method)": [[1, "bincfg.cfg.cfg.CFG.to_cfg_dict"]], "to_networkx() (bincfg.cfg.cfg.cfg method)": [[1, "bincfg.cfg.cfg.CFG.to_networkx"]], "tokens (bincfg.cfg.mem_cfg.memcfg attribute)": [[1, "bincfg.cfg.mem_cfg.MemCFG.tokens"]], "train_test_split() (bincfg.cfg.mem_cfg_dataset.memcfgdataset method)": [[1, "bincfg.cfg.mem_cfg_dataset.MemCFGDataset.train_test_split"]], "uncompress_stats() (bincfg.cfg.cfg.cfg class method)": [[1, "bincfg.cfg.cfg.CFG.uncompress_stats"]], "using_tokens (bincfg.cfg.mem_cfg_dataset.memcfgdataset attribute)": [[1, "bincfg.cfg.mem_cfg_dataset.MemCFGDataset.using_tokens"]], "default_header_path (in module bincfg.labeling.node_labels)": [[2, "bincfg.labeling.node_labels.DEFAULT_HEADER_PATH"]], "node_labels (in module bincfg.labeling.node_labels)": [[2, "bincfg.labeling.node_labels.NODE_LABELS"]], "bincfg.labeling": [[2, "module-bincfg.labeling"]], "bincfg.labeling.node_labels": [[2, "module-bincfg.labeling.node_labels"]], "bincfg.labeling.parse_cfg_labels": [[2, "module-bincfg.labeling.parse_cfg_labels"]], "generate_c_header_file() (in module bincfg.labeling.node_labels)": [[2, "bincfg.labeling.node_labels.generate_c_header_file"]], "get_node_label() (in module bincfg.labeling.node_labels)": [[2, "bincfg.labeling.node_labels.get_node_label"]], "parse_node_labels() (in module bincfg.labeling.parse_cfg_labels)": [[2, "bincfg.labeling.parse_cfg_labels.parse_node_labels"]], "arch (class in bincfg.normalization.tokenization_constants)": [[3, "bincfg.normalization.tokenization_constants.ARCH"]], "auto (bincfg.normalization.tokenization_constants.tokenizationlevel attribute)": [[3, "bincfg.normalization.tokenization_constants.TokenizationLevel.AUTO"]], "branch_prediction (bincfg.normalization.tokenization_constants.tokens attribute)": [[3, "bincfg.normalization.tokenization_constants.Tokens.BRANCH_PREDICTION"]], "basenormalizer (class in bincfg.normalization.base_normalizer)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer"]], "basetokenizer (class in bincfg.normalization.base_tokenizer)": [[3, "bincfg.normalization.base_tokenizer.BaseTokenizer"]], "close_bracket (bincfg.normalization.tokenization_constants.tokens attribute)": [[3, "bincfg.normalization.tokenization_constants.Tokens.CLOSE_BRACKET"]], "compressedstatsnormalizer (class in bincfg.normalization.builtin_normalizers)": [[3, "bincfg.normalization.builtin_normalizers.CompressedStatsNormalizer"]], "default_newline_tuple (bincfg.normalization.base_tokenizer.basetokenizer attribute)": [[3, "bincfg.normalization.base_tokenizer.BaseTokenizer.DEFAULT_NEWLINE_TUPLE"]], "default_tokenization_level (bincfg.normalization.base_normalizer.basenormalizer attribute)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.DEFAULT_TOKENIZATION_LEVEL"]], "default_tokenization_level (bincfg.normalization.builtin_normalizers.compressedstatsnormalizer attribute)": [[3, "bincfg.normalization.builtin_normalizers.CompressedStatsNormalizer.DEFAULT_TOKENIZATION_LEVEL"]], "default_tokenization_level (bincfg.normalization.builtin_normalizers.deepbindiffnormalizer attribute)": [[3, "bincfg.normalization.builtin_normalizers.DeepBinDiffNormalizer.DEFAULT_TOKENIZATION_LEVEL"]], "default_tokenization_level (bincfg.normalization.builtin_normalizers.deepsemanticnormalizer attribute)": [[3, "bincfg.normalization.builtin_normalizers.DeepSemanticNormalizer.DEFAULT_TOKENIZATION_LEVEL"]], "default_tokenization_level (bincfg.normalization.builtin_normalizers.innereyenormalizer attribute)": [[3, "bincfg.normalization.builtin_normalizers.InnerEyeNormalizer.DEFAULT_TOKENIZATION_LEVEL"]], "default_tokenization_level (bincfg.normalization.builtin_normalizers.mynormalizer attribute)": [[3, "bincfg.normalization.builtin_normalizers.MyNormalizer.DEFAULT_TOKENIZATION_LEVEL"]], "default_tokenization_level (bincfg.normalization.builtin_normalizers.safenormalizer attribute)": [[3, "bincfg.normalization.builtin_normalizers.SafeNormalizer.DEFAULT_TOKENIZATION_LEVEL"]], "default_tokens (in module bincfg.normalization.tokenization_constants)": [[3, "bincfg.normalization.tokenization_constants.DEFAULT_TOKENS"]], "deepbindiffnormalizer (class in bincfg.normalization.builtin_normalizers)": [[3, "bincfg.normalization.builtin_normalizers.DeepBinDiffNormalizer"]], "deepsemanticnormalizer (class in bincfg.normalization.builtin_normalizers)": [[3, "bincfg.normalization.builtin_normalizers.DeepSemanticNormalizer"]], "immediate (bincfg.normalization.tokenization_constants.tokens attribute)": [[3, "bincfg.normalization.tokenization_constants.Tokens.IMMEDIATE"]], "instruction (bincfg.normalization.tokenization_constants.tokenizationlevel attribute)": [[3, "bincfg.normalization.tokenization_constants.TokenizationLevel.INSTRUCTION"]], "instruction_address (bincfg.normalization.tokenization_constants.tokens attribute)": [[3, "bincfg.normalization.tokenization_constants.Tokens.INSTRUCTION_ADDRESS"]], "instruction_prefix (bincfg.normalization.tokenization_constants.tokens attribute)": [[3, "bincfg.normalization.tokenization_constants.Tokens.INSTRUCTION_PREFIX"]], "instruction_start (bincfg.normalization.tokenization_constants.tokens attribute)": [[3, "bincfg.normalization.tokenization_constants.Tokens.INSTRUCTION_START"]], "innereyenormalizer (class in bincfg.normalization.builtin_normalizers)": [[3, "bincfg.normalization.builtin_normalizers.InnerEyeNormalizer"]], "memory_size (bincfg.normalization.tokenization_constants.tokens attribute)": [[3, "bincfg.normalization.tokenization_constants.Tokens.MEMORY_SIZE"]], "mismatch (bincfg.normalization.tokenization_constants.tokens attribute)": [[3, "bincfg.normalization.tokenization_constants.Tokens.MISMATCH"]], "metanorm (class in bincfg.normalization.base_normalizer)": [[3, "bincfg.normalization.base_normalizer.MetaNorm"]], "mynormalizer (class in bincfg.normalization.builtin_normalizers)": [[3, "bincfg.normalization.builtin_normalizers.MyNormalizer"]], "newline (bincfg.normalization.tokenization_constants.tokens attribute)": [[3, "bincfg.normalization.tokenization_constants.Tokens.NEWLINE"]], "opcode (bincfg.normalization.tokenization_constants.tokenizationlevel attribute)": [[3, "bincfg.normalization.tokenization_constants.TokenizationLevel.OPCODE"]], "opcode (bincfg.normalization.tokenization_constants.tokens attribute)": [[3, "bincfg.normalization.tokenization_constants.Tokens.OPCODE"]], "open_bracket (bincfg.normalization.tokenization_constants.tokens attribute)": [[3, "bincfg.normalization.tokenization_constants.Tokens.OPEN_BRACKET"]], "plus_sign (bincfg.normalization.tokenization_constants.tokens attribute)": [[3, "bincfg.normalization.tokenization_constants.Tokens.PLUS_SIGN"]], "ptr (bincfg.normalization.tokenization_constants.tokens attribute)": [[3, "bincfg.normalization.tokenization_constants.Tokens.PTR"]], "register (bincfg.normalization.tokenization_constants.tokens attribute)": [[3, "bincfg.normalization.tokenization_constants.Tokens.REGISTER"]], "rose_info (bincfg.normalization.tokenization_constants.tokens attribute)": [[3, "bincfg.normalization.tokenization_constants.Tokens.ROSE_INFO"]], "segment (bincfg.normalization.tokenization_constants.tokens attribute)": [[3, "bincfg.normalization.tokenization_constants.Tokens.SEGMENT"]], "segment_address (bincfg.normalization.tokenization_constants.tokens attribute)": [[3, "bincfg.normalization.tokenization_constants.Tokens.SEGMENT_ADDRESS"]], "spacing (bincfg.normalization.tokenization_constants.tokens attribute)": [[3, "bincfg.normalization.tokenization_constants.Tokens.SPACING"]], "safenormalizer (class in bincfg.normalization.builtin_normalizers)": [[3, "bincfg.normalization.builtin_normalizers.SafeNormalizer"]], "times_sign (bincfg.normalization.tokenization_constants.tokens attribute)": [[3, "bincfg.normalization.tokenization_constants.Tokens.TIMES_SIGN"]], "tokenmismatcherror": [[3, "bincfg.normalization.tokenization_constants.TokenMismatchError"]], "tokenizationlevel (class in bincfg.normalization.tokenization_constants)": [[3, "bincfg.normalization.tokenization_constants.TokenizationLevel"]], "tokens (class in bincfg.normalization.tokenization_constants)": [[3, "bincfg.normalization.tokenization_constants.Tokens"]], "x86 (bincfg.normalization.tokenization_constants.arch attribute)": [[3, "bincfg.normalization.tokenization_constants.ARCH.X86"]], "x86_64 (bincfg.normalization.tokenization_constants.arch attribute)": [[3, "bincfg.normalization.tokenization_constants.ARCH.X86_64"]], "bincfg.normalization.base_normalizer": [[3, "module-bincfg.normalization.base_normalizer"]], "bincfg.normalization.base_tokenizer": [[3, "module-bincfg.normalization.base_tokenizer"]], "bincfg.normalization.builtin_normalizers": [[3, "module-bincfg.normalization.builtin_normalizers"]], "bincfg.normalization.norm_utils": [[3, "module-bincfg.normalization.norm_utils"]], "bincfg.normalization.normalize": [[3, "module-bincfg.normalization.normalize"]], "bincfg.normalization.tokenization_constants": [[3, "module-bincfg.normalization.tokenization_constants"]], "clean_incoming_instruction() (in module bincfg.normalization.norm_utils)": [[3, "bincfg.normalization.norm_utils.clean_incoming_instruction"]], "clean_nop() (in module bincfg.normalization.norm_utils)": [[3, "bincfg.normalization.norm_utils.clean_nop"]], "eq_special_funcs() (in module bincfg.normalization.norm_utils)": [[3, "bincfg.normalization.norm_utils.eq_special_funcs"]], "get_normalizer() (in module bincfg.normalization.builtin_normalizers)": [[3, "bincfg.normalization.builtin_normalizers.get_normalizer"]], "handle_function_call() (bincfg.normalization.base_normalizer.basenormalizer method)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.handle_function_call"]], "handle_function_call() (bincfg.normalization.builtin_normalizers.compressedstatsnormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.CompressedStatsNormalizer.handle_function_call"]], "handle_function_call() (bincfg.normalization.builtin_normalizers.deepbindiffnormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.DeepBinDiffNormalizer.handle_function_call"]], "handle_function_call() (bincfg.normalization.builtin_normalizers.deepsemanticnormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.DeepSemanticNormalizer.handle_function_call"]], "handle_function_call() (bincfg.normalization.builtin_normalizers.innereyenormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.InnerEyeNormalizer.handle_function_call"]], "handle_function_call() (bincfg.normalization.builtin_normalizers.mynormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.MyNormalizer.handle_function_call"]], "handle_function_call() (bincfg.normalization.builtin_normalizers.safenormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.SafeNormalizer.handle_function_call"]], "handle_ignored() (bincfg.normalization.base_normalizer.basenormalizer method)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.handle_ignored"]], "handle_immediate() (bincfg.normalization.base_normalizer.basenormalizer method)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.handle_immediate"]], "handle_immediate() (bincfg.normalization.builtin_normalizers.compressedstatsnormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.CompressedStatsNormalizer.handle_immediate"]], "handle_immediate() (bincfg.normalization.builtin_normalizers.deepbindiffnormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.DeepBinDiffNormalizer.handle_immediate"]], "handle_immediate() (bincfg.normalization.builtin_normalizers.deepsemanticnormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.DeepSemanticNormalizer.handle_immediate"]], "handle_immediate() (bincfg.normalization.builtin_normalizers.innereyenormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.InnerEyeNormalizer.handle_immediate"]], "handle_instruction() (bincfg.normalization.base_normalizer.basenormalizer method)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.handle_instruction"]], "handle_jump() (bincfg.normalization.base_normalizer.basenormalizer method)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.handle_jump"]], "handle_jump() (bincfg.normalization.builtin_normalizers.compressedstatsnormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.CompressedStatsNormalizer.handle_jump"]], "handle_jump() (bincfg.normalization.builtin_normalizers.deepsemanticnormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.DeepSemanticNormalizer.handle_jump"]], "handle_jump() (bincfg.normalization.builtin_normalizers.mynormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.MyNormalizer.handle_jump"]], "handle_memory_expression() (bincfg.normalization.base_normalizer.basenormalizer method)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.handle_memory_expression"]], "handle_memory_expression() (bincfg.normalization.builtin_normalizers.deepbindiffnormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.DeepBinDiffNormalizer.handle_memory_expression"]], "handle_memory_size() (bincfg.normalization.base_normalizer.basenormalizer method)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.handle_memory_size"]], "handle_memory_size() (bincfg.normalization.builtin_normalizers.compressedstatsnormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.CompressedStatsNormalizer.handle_memory_size"]], "handle_memory_size() (bincfg.normalization.builtin_normalizers.deepbindiffnormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.DeepBinDiffNormalizer.handle_memory_size"]], "handle_memory_size() (bincfg.normalization.builtin_normalizers.deepsemanticnormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.DeepSemanticNormalizer.handle_memory_size"]], "handle_memory_size() (bincfg.normalization.builtin_normalizers.innereyenormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.InnerEyeNormalizer.handle_memory_size"]], "handle_memory_size() (bincfg.normalization.builtin_normalizers.mynormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.MyNormalizer.handle_memory_size"]], "handle_memory_size() (bincfg.normalization.builtin_normalizers.safenormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.SafeNormalizer.handle_memory_size"]], "handle_mismatch() (bincfg.normalization.base_normalizer.basenormalizer method)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.handle_mismatch"]], "handle_newline() (bincfg.normalization.base_normalizer.basenormalizer method)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.handle_newline"]], "handle_opcode() (bincfg.normalization.base_normalizer.basenormalizer method)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.handle_opcode"]], "handle_prefix() (bincfg.normalization.base_normalizer.basenormalizer method)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.handle_prefix"]], "handle_register() (bincfg.normalization.base_normalizer.basenormalizer method)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.handle_register"]], "handle_register() (bincfg.normalization.builtin_normalizers.compressedstatsnormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.CompressedStatsNormalizer.handle_register"]], "handle_register() (bincfg.normalization.builtin_normalizers.deepbindiffnormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.DeepBinDiffNormalizer.handle_register"]], "handle_register() (bincfg.normalization.builtin_normalizers.deepsemanticnormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.DeepSemanticNormalizer.handle_register"]], "handle_register() (bincfg.normalization.builtin_normalizers.mynormalizer method)": [[3, "bincfg.normalization.builtin_normalizers.MyNormalizer.handle_register"]], "handle_rose_info() (bincfg.normalization.base_normalizer.basenormalizer method)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.handle_rose_info"]], "handle_unknown_token() (bincfg.normalization.base_normalizer.basenormalizer method)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.handle_unknown_token"]], "hash_token() (bincfg.normalization.base_normalizer.basenormalizer method)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.hash_token"]], "ignore() (in module bincfg.normalization.norm_utils)": [[3, "bincfg.normalization.norm_utils.ignore"]], "imm_to_int() (in module bincfg.normalization.norm_utils)": [[3, "bincfg.normalization.norm_utils.imm_to_int"]], "memsize_value() (in module bincfg.normalization.norm_utils)": [[3, "bincfg.normalization.norm_utils.memsize_value"]], "normalize() (bincfg.normalization.base_normalizer.basenormalizer method)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.normalize"]], "normalize_cfg_data() (in module bincfg.normalization.normalize)": [[3, "bincfg.normalization.normalize.normalize_cfg_data"]], "on_token_mismatch() (bincfg.normalization.base_tokenizer.basetokenizer method)": [[3, "bincfg.normalization.base_tokenizer.BaseTokenizer.on_token_mismatch"]], "register_opcode_handler() (bincfg.normalization.base_normalizer.basenormalizer method)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.register_opcode_handler"]], "replace_function_call_immediate() (in module bincfg.normalization.norm_utils)": [[3, "bincfg.normalization.norm_utils.replace_function_call_immediate"]], "replace_general_register() (in module bincfg.normalization.norm_utils)": [[3, "bincfg.normalization.norm_utils.replace_general_register"]], "replace_jmpdst() (in module bincfg.normalization.norm_utils)": [[3, "bincfg.normalization.norm_utils.replace_jmpdst"]], "replace_memory_expression() (in module bincfg.normalization.norm_utils)": [[3, "bincfg.normalization.norm_utils.replace_memory_expression"]], "return_immstr() (in module bincfg.normalization.norm_utils)": [[3, "bincfg.normalization.norm_utils.return_immstr"]], "special_function_call() (in module bincfg.normalization.norm_utils)": [[3, "bincfg.normalization.norm_utils.special_function_call"]], "threshold_immediate() (in module bincfg.normalization.norm_utils)": [[3, "bincfg.normalization.norm_utils.threshold_immediate"]], "token_sep (bincfg.normalization.base_normalizer.basenormalizer attribute)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.token_sep"]], "tokenization_level (bincfg.normalization.base_normalizer.basenormalizer attribute)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.tokenization_level"]], "tokenization_level (bincfg.normalization.builtin_normalizers.compressedstatsnormalizer attribute)": [[3, "bincfg.normalization.builtin_normalizers.CompressedStatsNormalizer.tokenization_level"]], "tokenization_level (bincfg.normalization.builtin_normalizers.deepbindiffnormalizer attribute)": [[3, "bincfg.normalization.builtin_normalizers.DeepBinDiffNormalizer.tokenization_level"]], "tokenization_level (bincfg.normalization.builtin_normalizers.deepsemanticnormalizer attribute)": [[3, "bincfg.normalization.builtin_normalizers.DeepSemanticNormalizer.tokenization_level"]], "tokenization_level (bincfg.normalization.builtin_normalizers.innereyenormalizer attribute)": [[3, "bincfg.normalization.builtin_normalizers.InnerEyeNormalizer.tokenization_level"]], "tokenization_level (bincfg.normalization.builtin_normalizers.mynormalizer attribute)": [[3, "bincfg.normalization.builtin_normalizers.MyNormalizer.tokenization_level"]], "tokenization_level (bincfg.normalization.builtin_normalizers.safenormalizer attribute)": [[3, "bincfg.normalization.builtin_normalizers.SafeNormalizer.tokenization_level"]], "tokenize() (bincfg.normalization.base_normalizer.basenormalizer method)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.tokenize"]], "tokenize() (bincfg.normalization.base_tokenizer.basetokenizer method)": [[3, "bincfg.normalization.base_tokenizer.BaseTokenizer.tokenize"]], "tokenizer (bincfg.normalization.base_normalizer.basenormalizer attribute)": [[3, "bincfg.normalization.base_normalizer.BaseNormalizer.tokenizer"]], "aquirelockerror": [[4, "bincfg.utils.mp_utils.AquireLockError"]], "atomicdata (class in bincfg.utils.mp_utils)": [[4, "bincfg.utils.mp_utils.AtomicData"]], "atomictokendict (class in bincfg.utils.mp_utils)": [[4, "bincfg.utils.mp_utils.AtomicTokenDict"]], "equalitycheckingerror": [[4, "bincfg.utils.misc_utils.EqualityCheckingError"]], "equalityerror": [[4, "bincfg.utils.misc_utils.EqualityError"]], "multiprocessingerror": [[4, "bincfg.utils.mp_utils.MultiprocessingError"]], "redirectstdstreams (class in bincfg.utils.mp_utils)": [[4, "bincfg.utils.mp_utils.RedirectStdStreams"]], "threadpoolmanager (class in bincfg.utils.mp_utils)": [[4, "bincfg.utils.mp_utils.ThreadPoolManager"]], "addtokens() (bincfg.utils.mp_utils.atomictokendict method)": [[4, "bincfg.utils.mp_utils.AtomicTokenDict.addtokens"]], "aquire_lock() (bincfg.utils.mp_utils.atomicdata method)": [[4, "bincfg.utils.mp_utils.AtomicData.aquire_lock"]], "arg_array_split() (in module bincfg.utils.misc_utils)": [[4, "bincfg.utils.misc_utils.arg_array_split"]], "atomic_read() (bincfg.utils.mp_utils.atomicdata method)": [[4, "bincfg.utils.mp_utils.AtomicData.atomic_read"]], "atomic_update() (bincfg.utils.mp_utils.atomicdata method)": [[4, "bincfg.utils.mp_utils.AtomicData.atomic_update"]], "atomic_write() (bincfg.utils.mp_utils.atomicdata method)": [[4, "bincfg.utils.mp_utils.AtomicData.atomic_write"]], "bincfg.utils.cfg_utils": [[4, "module-bincfg.utils.cfg_utils"]], "bincfg.utils.misc_utils": [[4, "module-bincfg.utils.misc_utils"]], "bincfg.utils.mp_utils": [[4, "module-bincfg.utils.mp_utils"]], "check_for_normalizer() (in module bincfg.utils.cfg_utils)": [[4, "bincfg.utils.cfg_utils.check_for_normalizer"]], "data (bincfg.utils.mp_utils.atomictokendict property)": [[4, "bincfg.utils.mp_utils.AtomicTokenDict.data"]], "delete_file() (bincfg.utils.mp_utils.atomicdata method)": [[4, "bincfg.utils.mp_utils.AtomicData.delete_file"]], "delete_file() (bincfg.utils.mp_utils.atomictokendict method)": [[4, "bincfg.utils.mp_utils.AtomicTokenDict.delete_file"]], "eq_obj() (in module bincfg.utils.misc_utils)": [[4, "bincfg.utils.misc_utils.eq_obj"]], "eq_obj_err() (in module bincfg.utils.misc_utils)": [[4, "bincfg.utils.misc_utils.eq_obj_err"]], "get() (bincfg.utils.mp_utils.atomictokendict method)": [[4, "bincfg.utils.mp_utils.AtomicTokenDict.get"]], "get_address() (in module bincfg.utils.cfg_utils)": [[4, "bincfg.utils.cfg_utils.get_address"]], "get_module() (in module bincfg.utils.misc_utils)": [[4, "bincfg.utils.misc_utils.get_module"]], "get_smallest_np_dtype() (in module bincfg.utils.misc_utils)": [[4, "bincfg.utils.misc_utils.get_smallest_np_dtype"]], "get_special_function_names() (in module bincfg.utils.cfg_utils)": [[4, "bincfg.utils.cfg_utils.get_special_function_names"]], "get_thread_pool() (in module bincfg.utils.mp_utils)": [[4, "bincfg.utils.mp_utils.get_thread_pool"]], "hash_obj() (in module bincfg.utils.misc_utils)": [[4, "bincfg.utils.misc_utils.hash_obj"]], "init_thread_pool() (in module bincfg.utils.mp_utils)": [[4, "bincfg.utils.mp_utils.init_thread_pool"]], "isinstance_with_iterables() (in module bincfg.utils.misc_utils)": [[4, "bincfg.utils.misc_utils.isinstance_with_iterables"]], "items() (bincfg.utils.mp_utils.atomictokendict method)": [[4, "bincfg.utils.mp_utils.AtomicTokenDict.items"]], "keys() (bincfg.utils.mp_utils.atomictokendict method)": [[4, "bincfg.utils.mp_utils.AtomicTokenDict.keys"]], "log() (in module bincfg.utils.misc_utils)": [[4, "bincfg.utils.misc_utils.log"]], "map_mp() (in module bincfg.utils.mp_utils)": [[4, "bincfg.utils.mp_utils.map_mp"]], "num_workers (bincfg.utils.mp_utils.threadpoolmanager attribute)": [[4, "bincfg.utils.mp_utils.ThreadPoolManager.num_workers"]], "pool (bincfg.utils.mp_utils.threadpoolmanager attribute)": [[4, "bincfg.utils.mp_utils.ThreadPoolManager.pool"]], "progressbar() (in module bincfg.utils.misc_utils)": [[4, "bincfg.utils.misc_utils.progressbar"]], "release_lock() (bincfg.utils.mp_utils.atomicdata method)": [[4, "bincfg.utils.mp_utils.AtomicData.release_lock"]], "scatter_nd_numpy() (in module bincfg.utils.misc_utils)": [[4, "bincfg.utils.misc_utils.scatter_nd_numpy"]], "set_logger() (in module bincfg.utils.misc_utils)": [[4, "bincfg.utils.misc_utils.set_logger"]], "setdefault() (bincfg.utils.mp_utils.atomictokendict method)": [[4, "bincfg.utils.mp_utils.AtomicTokenDict.setdefault"]], "terminate_thread_pool() (in module bincfg.utils.mp_utils)": [[4, "bincfg.utils.mp_utils.terminate_thread_pool"]], "timeout_wrapper() (in module bincfg.utils.misc_utils)": [[4, "bincfg.utils.misc_utils.timeout_wrapper"]], "update() (bincfg.utils.mp_utils.atomictokendict method)": [[4, "bincfg.utils.mp_utils.AtomicTokenDict.update"]], "update_atomic_tokens() (in module bincfg.utils.cfg_utils)": [[4, "bincfg.utils.cfg_utils.update_atomic_tokens"]], "update_memcfg_tokens() (in module bincfg.utils.cfg_utils)": [[4, "bincfg.utils.cfg_utils.update_memcfg_tokens"]], "values() (bincfg.utils.mp_utils.atomictokendict method)": [[4, "bincfg.utils.mp_utils.AtomicTokenDict.values"]]}})